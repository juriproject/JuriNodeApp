{
  "contractName": "JuriStakingPoolWithOracle",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getUsers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_updateIterationCount",
          "type": "uint256"
        }
      ],
      "name": "firstUpdateStakeForNextXAmountOfUsers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextStakingRound",
      "outputs": [
        {
          "name": "totalAddedStake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getAdditionalStakeForUserInNextPeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "juriAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIsCurrentRoundStaking",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addOwnerFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_updateIterationCount",
          "type": "uint256"
        },
        {
          "name": "_wasCompliant",
          "type": "bool[]"
        }
      ],
      "name": "addWasCompliantDataForUsers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "complianceDataAtIndex",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newJuriAddress",
          "type": "address"
        }
      ],
      "name": "setJuriAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentStakingRound",
      "outputs": [
        {
          "name": "roundIndex",
          "type": "uint256"
        },
        {
          "name": "stage",
          "type": "uint8"
        },
        {
          "name": "addComplianceDataIndex",
          "type": "uint256"
        },
        {
          "name": "updateStaking1Index",
          "type": "uint256"
        },
        {
          "name": "updateStaking2Index",
          "type": "uint256"
        },
        {
          "name": "totalStakeToSlash",
          "type": "uint256"
        },
        {
          "name": "nonCompliancePenalty",
          "type": "uint256"
        },
        {
          "name": "totalPayout",
          "type": "uint256"
        },
        {
          "name": "juriFees",
          "type": "uint256"
        },
        {
          "name": "useMaxNonCompliancy",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_canWithdrawAll",
          "type": "bool"
        }
      ],
      "name": "_withdrawForUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "complianceDataIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolDefinition",
      "outputs": [
        {
          "name": "startTime",
          "type": "uint256"
        },
        {
          "name": "periodLength",
          "type": "uint256"
        },
        {
          "name": "feePercentage",
          "type": "uint256"
        },
        {
          "name": "compliantGainPercentage",
          "type": "uint256"
        },
        {
          "name": "maxNonCompliantPenaltyPercentage",
          "type": "uint256"
        },
        {
          "name": "maxNonCompliantFactor",
          "type": "uint256"
        },
        {
          "name": "minStakePerUser",
          "type": "uint256"
        },
        {
          "name": "maxStakePerUser",
          "type": "uint256"
        },
        {
          "name": "maxTotalStake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakeForUserAtRoundStart",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPoolUserCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addMoreStakeForNextPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_updateIterationCount",
          "type": "uint256"
        }
      ],
      "name": "secondUpdateStakeForNextXAmountOfUsers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "optOutOfStakingForNextPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawOwnerFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "removeUserInNextPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownerFunds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalUserStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIsNextRoundStaking",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addUserInNextPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getIsLeavingNextPeriodForUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakeForUserInCurrentPeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "optInForStakingForNextPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getUserToBeAddedNextPeriod",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_proxy",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "name": "_periodLength",
          "type": "uint256"
        },
        {
          "name": "_feePercentage",
          "type": "uint256"
        },
        {
          "name": "_compliantGainPercentage",
          "type": "uint256"
        },
        {
          "name": "_maxNonCompliantPenaltyPercentage",
          "type": "uint256"
        },
        {
          "name": "_minStakePerUser",
          "type": "uint256"
        },
        {
          "name": "_maxStakePerUser",
          "type": "uint256"
        },
        {
          "name": "_maxTotalStake",
          "type": "uint256"
        },
        {
          "name": "_juriAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "wasCompliant",
          "type": "bool"
        }
      ],
      "name": "AddedComplianceDataForUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_updateIterationCount",
          "type": "uint256"
        }
      ],
      "name": "checkNewAddedComplianceData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_updateIterationCount\",\"type\":\"uint256\"}],\"name\":\"firstUpdateStakeForNextXAmountOfUsers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextStakingRound\",\"outputs\":[{\"name\":\"totalAddedStake\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAdditionalStakeForUserInNextPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"juriAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_updateIterationCount\",\"type\":\"uint256\"}],\"name\":\"checkNewAddedComplianceData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIsCurrentRoundStaking\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addOwnerFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_updateIterationCount\",\"type\":\"uint256\"},{\"name\":\"_wasCompliant\",\"type\":\"bool[]\"}],\"name\":\"addWasCompliantDataForUsers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"complianceDataAtIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newJuriAddress\",\"type\":\"address\"}],\"name\":\"setJuriAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentStakingRound\",\"outputs\":[{\"name\":\"roundIndex\",\"type\":\"uint256\"},{\"name\":\"stage\",\"type\":\"uint8\"},{\"name\":\"addComplianceDataIndex\",\"type\":\"uint256\"},{\"name\":\"updateStaking1Index\",\"type\":\"uint256\"},{\"name\":\"updateStaking2Index\",\"type\":\"uint256\"},{\"name\":\"totalStakeToSlash\",\"type\":\"uint256\"},{\"name\":\"nonCompliancePenalty\",\"type\":\"uint256\"},{\"name\":\"totalPayout\",\"type\":\"uint256\"},{\"name\":\"juriFees\",\"type\":\"uint256\"},{\"name\":\"useMaxNonCompliancy\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_canWithdrawAll\",\"type\":\"bool\"}],\"name\":\"_withdrawForUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"complianceDataIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poolDefinition\",\"outputs\":[{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"periodLength\",\"type\":\"uint256\"},{\"name\":\"feePercentage\",\"type\":\"uint256\"},{\"name\":\"compliantGainPercentage\",\"type\":\"uint256\"},{\"name\":\"maxNonCompliantPenaltyPercentage\",\"type\":\"uint256\"},{\"name\":\"maxNonCompliantFactor\",\"type\":\"uint256\"},{\"name\":\"minStakePerUser\",\"type\":\"uint256\"},{\"name\":\"maxStakePerUser\",\"type\":\"uint256\"},{\"name\":\"maxTotalStake\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakeForUserAtRoundStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPoolUserCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addMoreStakeForNextPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_updateIterationCount\",\"type\":\"uint256\"}],\"name\":\"secondUpdateStakeForNextXAmountOfUsers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"optOutOfStakingForNextPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawOwnerFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removeUserInNextPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalUserStake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIsNextRoundStaking\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addUserInNextPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getIsLeavingNextPeriodForUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakeForUserInCurrentPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"optInForStakingForNextPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserToBeAddedNextPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_proxy\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_startTime\",\"type\":\"uint256\"},{\"name\":\"_periodLength\",\"type\":\"uint256\"},{\"name\":\"_feePercentage\",\"type\":\"uint256\"},{\"name\":\"_compliantGainPercentage\",\"type\":\"uint256\"},{\"name\":\"_maxNonCompliantPenaltyPercentage\",\"type\":\"uint256\"},{\"name\":\"_minStakePerUser\",\"type\":\"uint256\"},{\"name\":\"_maxStakePerUser\",\"type\":\"uint256\"},{\"name\":\"_maxTotalStake\",\"type\":\"uint256\"},{\"name\":\"_juriAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wasCompliant\",\"type\":\"bool\"}],\"name\":\"AddedComplianceDataForUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addMoreStakeForNextPeriod(uint256)\":{\"details\":\"Add more stake for user once next staking period starts.\\r\",\"params\":{\"_amount\":\"The amount to be added as stake.\\r\"}},\"addOwnerFunds(uint256)\":{\"details\":\"Add owner funds to pool.\\r\"},\"addUserInNextPeriod(uint256)\":{\"details\":\"Add user to pool once next staking period starts.\\r\",\"params\":{\"_amount\":\"The amount to be added as stake for the user.\\r\"}},\"addWasCompliantDataForUsers(uint256,bool[])\":{\"details\":\"Add user's compliancy data for current or past periods.\\r\",\"params\":{\"_updateIterationCount\":\"The number defining the max for how much compliance\\r data will be passed in a single function call to prevent out-of-gas errors.\\r\",\"_wasCompliant\":\"The boolean array to indicate compliancy.\\r\"}},\"checkNewAddedComplianceData(uint256)\":{\"details\":\"Add user's compliancy data for current or past periods.\\r\",\"params\":{\"_updateIterationCount\":\"The number defining the max for how much compliance\\r data will be passed in a single function call to prevent out-of-gas errors.\\r\"}},\"firstUpdateStakeForNextXAmountOfUsers(uint256)\":{\"details\":\"First part for updating stakes of users for next X users.\\r\",\"params\":{\"_updateIterationCount\":\"The number defining how many users should\\r be updated in a single function call to prevent out-of-gas errors.\\r\"}},\"getAdditionalStakeForUserInNextPeriod(address)\":{\"details\":\"Get added stake for user.\\r\",\"return\":\"The amount of stake added in the next round for user.\\r\"},\"getIsCurrentRoundStaking()\":{\"details\":\"Read if calling user is staking in the current round.\\r\",\"return\":\"The boolean indicator if user is staking in the current round.\\r\"},\"getIsLeavingNextPeriodForUser(address)\":{\"details\":\"Read if user will be removed in the next round.\\r\",\"params\":{\"_user\":\"The user to be checked.\\r\"},\"return\":\"The boolean indicator showing if user is leaving next round.\\r\"},\"getIsNextRoundStaking()\":{\"details\":\"Read if calling user is staking in the next round.\\r\",\"return\":\"The boolean indicator if user will be staking next round.\\r\"},\"getPoolUserCount()\":{\"details\":\"Get the total pool user count.\\r\"},\"getStakeForUserAtRoundStart(address)\":{\"details\":\"Get stake for user that will be used in current staking round.\\r\",\"return\":\"The amount of stake used in the current round for user.\\r\"},\"getStakeForUserInCurrentPeriod(address)\":{\"details\":\"Get current stake for user.\\r\",\"return\":\"The amount of stake in the current round for user.\\r\"},\"getUserToBeAddedNextPeriod(uint256)\":{\"details\":\"Read users to be added in the next round.\\r\",\"params\":{\"_index\":\"The index in the array of pending user additions.\\r\"},\"return\":\"The user to be added.\\r\"},\"getUsers()\":{\"details\":\"Read users in pool.\\r\",\"return\":\"The users in the pool.\\r\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\\r\"},\"optInForStakingForNextPeriod()\":{\"details\":\"Opt in for staking for user once next staking period starts.\\r\"},\"optOutOfStakingForNextPeriod()\":{\"details\":\"Opt out of staking for user once next staking period starts.\\r\"},\"owner()\":{\"return\":\"the address of the owner.\\r\"},\"removeUserInNextPeriod()\":{\"details\":\"Remove user from pool once next staking period starts.\\r\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\\r It will not be possible to call the functions with the `onlyOwner`\\r modifier anymore.\\r\"},\"secondUpdateStakeForNextXAmountOfUsers(uint256)\":{\"details\":\"Second part for updating stakes of users for next X users.\\r\",\"params\":{\"_updateIterationCount\":\"The number defining how many users should\\r be updated in a single function call to prevent out-of-gas errors.\\r\"}},\"setJuriAddress(address)\":{\"details\":\"Set new Juri address.\\r\",\"params\":{\"_newJuriAddress\":\"The new Juri address to be stored.\\r\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"withdraw(uint256)\":{\"details\":\"Withdraw user stake funds from pool. Use funds added for next period\\r first. Keep enough funds to pay non-compliant penalty if required.\\r\"},\"withdrawOwnerFunds(uint256)\":{\"details\":\"Withdraw owner funds from pool.\\r\",\"params\":{\"_amount\":\"The amount to withdraw.\\r\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner,\\r thereby removing any functionality that is only available to the owner.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/JuriStakingPoolWithOracle.sol\":\"JuriStakingPoolWithOracle\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/JuriStakingPool.sol\":{\"keccak256\":\"0x01f56541cb4e0360fbfc9c65978c006484d2f8851d9f948a14f85fff3c493b5a\",\"urls\":[\"bzzr://e1de8c7a18cae5ba65ce4a3581e80e7682a0687fbb3046a690e5680e4bad8416\",\"dweb:/ipfs/QmQ9n6wC6eDEg3BxiBgaJuAy65MeFEFJyjGEWX6jU4Hfqr\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/lib/IERC20.sol\":{\"keccak256\":\"0x8cfdc109ca493014ef46abc92b4e1ec62fd1a3c2a7a5d2dcd510f3481d6ff430\",\"urls\":[\"bzzr://e054ef5607dfb0884685c17761611a91f2bf66de665f7fc56eebd007e8a90da0\",\"dweb:/ipfs/QmVn8jFK2NCj8xazHHNFMmWRYrToLoZUcSqLAEGzXayhLz\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/lib/Math.sol\":{\"keccak256\":\"0x2f85fabd16a349a821cbf85d20b76cd3f692937eb2892837839cbb05b58cfab5\",\"urls\":[\"bzzr://45e8093487ea09f9dc74cf38dc8516e54929264d6d5d08322efd0f60f0129d67\",\"dweb:/ipfs/QmTf8JyPjy9BVmNEBJ1fn9UJiCD1RfsJtmz8Rvic2Vq8Lh\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/lib/Ownable.sol\":{\"keccak256\":\"0x9099889e7c8831324aeb4c5bdaae89daaf768727a05722933416c9651a53ef0f\",\"urls\":[\"bzzr://2dc6cd8ebe6e2c5ed82687a23d425cd8314e1031c1421a8d495728dd98ed4459\",\"dweb:/ipfs/QmWqC69vRhgbMXMEcwCTwLBPMoGkTK2qxRssqzLZuYJdcG\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0xc16160137b7553b28f73a592dd6c724285e250d4da20cb7d7d885a8736e65a9c\",\"urls\":[\"bzzr://f0f915b182d74040df0335b5729de9788b87e104de723c16a61e8c73d2d22497\",\"dweb:/ipfs/QmSKSZZn4ad5AQELx7XerPsQhjfgwCBbnXZoJxTriHqXzR\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/JuriBonding.sol\":{\"keccak256\":\"0x2a18e37e79b4b783c87d482d66f744f2389a004d61b23d298270bbd02054b75c\",\"urls\":[\"bzzr://d1b7e282e125536785dea61215c8fedc070525589941f93cf8de6bb11e815dd5\",\"dweb:/ipfs/QmZ47p5bVd6R6jAY2jJAxdF4k9wrf4oNF31WUUB2XKaRNE\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/JuriNetworkProxy.sol\":{\"keccak256\":\"0x715e5f8305337d5622d80fc9e67cf8be8ec9ca212ebc930835681f3b5f6a4fd4\",\"urls\":[\"bzzr://c36e1e5222f331a1c4c4517fbd687070091eb9f316e5ccaeb9a5724d1d7ed212\",\"dweb:/ipfs/QmRB9z7RXNjNpfRfZWnpd6mFL9WEpbb8oiFSc7Nvf9NPyR\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/JuriStakingPoolWithOracle.sol\":{\"keccak256\":\"0x59cdf96c8ab6468c357c400e69be00c5eec0c4cfef7de4930aea9b286205c0f5\",\"urls\":[\"bzzr://ab58a059c40c0b3da477808f96640afcbfa50d095c26f4271c62cff42e60a392\",\"dweb:/ipfs/QmXLgcDsq4VQ7kgnKsU5QBfrkfYFfCDCVmSvPvPRKZQWHG\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/lib/LinkedListLib.sol\":{\"keccak256\":\"0x3c80bb97c3c0991feec74722f5d688a8dc9011584388a9328a628bbfd47ca1cf\",\"urls\":[\"bzzr://79a6d3538f082ec38be04b841c7e835f6c94fcec3369e6571dfe68ec9604e173\",\"dweb:/ipfs/QmbRkcEwJnDaUajvEXoGR111HQNw83hR1jpm2FyahJCzHJ\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/lib/MaxHeapLibrary.sol\":{\"keccak256\":\"0x7711a43cf2c89c2af6097a4175088e666ffd9487c7aa06b4781dd992d770510f\",\"urls\":[\"bzzr://39ff168155c64550a221157ee8258003e732ef0650f140555ad2d3e3f4d548db\",\"dweb:/ipfs/QmdsimY6px6PEyLwr73jBkQ6khtSm4DHoMypXJ1rsnxkFG\"]},\"/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/lib/SkaleFileStorageInterface.sol\":{\"keccak256\":\"0xd60bd40e07050ebb0424a8ca5da5348434db8b98a93ca18b63db031715da1fe7\",\"urls\":[\"bzzr://4324160dc149cad44efaa27dcfd626d701e81700159101232ee07201ae7e183f\",\"dweb:/ipfs/QmPR2WzJ7vsiYyy4j9kxgQC4S4N9QGacY9QAebn1qzwuHt\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003f5a38038062003f5a83398181016040526101608110156200003857600080fd5b50805160208201516040808401516060850151608086015160a087015160c088015160e08901516101008a01516101208b0151610140909b0151600080546001600160a01b031916331780825599519b9c9a9b989a9799969895979496939592949391928c928c928c928c928c928c928c928c928c928c926001600160a01b031691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b038a166200015657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f546f6b656e2061646472657373206d75737420626520646566696e6564210000604482015290519081900360640190fd5b428911620001b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018062003f396021913960400191505060405180910390fd5b600088116200022057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f506572696f64206c656e6774682063616e6e6f74206265203021000000000000604482015290519081900360640190fd5b60648711156200027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018062003e9f6032913960400191505060405180910390fd5b6064861115620002d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d81526020018062003e62603d913960400191505060405180910390fd5b606485111562000334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604881526020018062003ed16048913960600191505060405180910390fd5b60008411620003a457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d696e207374616b652070657220757365722063616e6e6f7420626520302100604482015290519081900360640190fd5b600083116200040357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f602482015260008051602062003f19833981519152604482015290519081900360640190fd5b600082116200046257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f602482015260008051602062003f19833981519152604482015290519081900360640190fd5b6001600160a01b038116620004d857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4a75726920616464726573732063616e6e6f7420626520302100000000000000604482015290519081900360640190fd5b6000601f81905560208190556021819055620004fd906001600160e01b036200062d16565b600180546001600160a01b03808d166001600160a01b031992831617909255600280549284169290911691909117905560408051610120810182528a815260208082018b905291810189905260608101889052608081018790529060a082019062000576906064908990620026e2620006fd821b17901c565b8152602001858152602001848152602001838152506003600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155905050505050505050505050508a602360006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050505050505050505062000809565b60408051610140810182528281526000602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905260e084018390526101008401839052610120909301829052600f8590556010805460ff1990811690915560118390556012839055601383905560148390556015839055601683905560178390556018805490911690558351808501838152938101948590528381529081019190915290519091601991620006ec91601c9162000775565b506020820151816004015590505050565b6000828211156200076f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f5361666553756220756e646572666c6f77210000000000000000000000000000604482015290519081900360640190fd5b50900390565b828054828255906000526020600020908101928215620007cd579160200282015b82811115620007cd57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000796565b50620007db929150620007df565b5090565b6200080691905b80821115620007db5780546001600160a01b0319168155600101620007e6565b90565b61364980620008196000396000f3fe608060405234801561001057600080fd5b50600436106102315760003560e01c8063837bee2011610130578063d1658d7f116100b8578063ec5568891161007c578063ec556889146106c4578063eed7dee9146106cc578063f2fde38b146106d4578063f9feab53146106fa578063fc0c546a1461071757610231565b8063d1658d7f1461064b578063d2bbbbbb14610653578063d3f6ca571461065b578063d8e98cbe14610678578063e434f13c1461069e57610231565b80638f32d59b116100ff5780638f32d59b1461060e578063962743cf14610616578063ad1211be1461061e578063bc5b91091461063b578063c12021311461064357610231565b8063837bee20146105c457806389356be1146105cc5780638ab96b02146105e95780638da5cb5b1461060657610231565b80634696f41a116101be5780636ccb2596116101825780636ccb25961461050b5780636fd2395f1461053f57806370360d3b14610547578063715018a61461059657806383321afb1461059e57610231565b80634696f41a1461038457806349d445d0146103a1578063533722cf1461044b578063573e57b71461047757806365c2dc7e1461049d57610231565b80632ada10b0116102055780632ada10b0146102ed5780632e1a7d4d14610311578063364afaea1461032e578063365b98b21461034b5780633ab125651461036857610231565b8062ce8e3e146102365780630315073b1461028e5780631bb4fec3146102ad5780631d3b32bc146102c7575b600080fd5b61023e61071f565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561027a578181015183820152602001610262565b505050509050019250505060405180910390f35b6102ab600480360360208110156102a457600080fd5b5035610782565b005b6102b561095e565b60408051918252519081900360200190f35b6102b5600480360360208110156102dd57600080fd5b50356001600160a01b0316610964565b6102f5610983565b604080516001600160a01b039092168252519081900360200190f35b6102ab6004803603602081101561032757600080fd5b5035610992565b6102ab6004803603602081101561034457600080fd5b5035610a93565b6102f56004803603602081101561036157600080fd5b5035610d90565b610370610db7565b604080519115158252519081900360200190f35b6102ab6004803603602081101561039a57600080fd5b5035610dcd565b6102ab600480360360408110156103b757600080fd5b813591908101906040810160208201356401000000008111156103d957600080fd5b8201836020820111156103eb57600080fd5b8035906020019184602083028401116401000000008311171561040d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610f89945050505050565b6103706004803603604081101561046157600080fd5b50803590602001356001600160a01b0316611269565b6102ab6004803603602081101561048d57600080fd5b50356001600160a01b0316611289565b6104a561134f565b604051808b81526020018a60028111156104bb57fe5b60ff1681526020810199909952506040808901979097526060880195909552608087019390935260a086019190915260c085015260e0840152151561010083015251908190036101200192509050f35b6102ab6004803603606081101561052157600080fd5b506001600160a01b0381351690602081013590604001351515611377565b6102b561147a565b61054f611480565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a086015260c085015260e084015261010083015251908190036101200190f35b6102ab61149e565b6102b5600480360360208110156105b457600080fd5b50356001600160a01b031661152b565b6102b5611546565b6102ab600480360360208110156105e257600080fd5b503561154c565b6102ab600480360360208110156105ff57600080fd5b503561197e565b6102f5611c2f565b610370611c3e565b6102ab611c4f565b6102ab6004803603602081101561063457600080fd5b5035611dc1565b6102ab61204f565b6102b56121c6565b6102b56121cc565b6103706121d2565b6102ab6004803603602081101561067157600080fd5b50356121e8565b6103706004803603602081101561068e57600080fd5b50356001600160a01b031661240b565b6102b5600480360360208110156106b457600080fd5b50356001600160a01b0316612429565b6102f5612444565b6102ab612453565b6102ab600480360360208110156106ea57600080fd5b50356001600160a01b03166125c8565b6102f56004803603602081101561071057600080fd5b5035612614565b6102f5612641565b6060601e80548060200260200160405190810160405280929190818152602001828054801561077757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610759575b505050505090505b90565b61078a611c3e565b6107c55760405162461bcd60e51b81526004018080602001828103825260218152602001806133c76021913960400191505060405180910390fd5b60018060105460ff1660028111156107d957fe5b146108155760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b6012545b601e548110801561083b5750601254610838908463ffffffff61265016565b81105b1561092b576000601e828154811061084f57fe5b60009182526020808320909101546001600160a01b0316808352600c90915260409091205490915060ff166108845750610923565b600f5460009081526022602090815260408083206001600160a01b038516845290915281205460ff16906108b78361152b565b905081156109085760006108ca826126a7565b905060006108de828463ffffffff6126e216565b6016549091506108f4908263ffffffff61265016565b6016556109018583612734565b505061091f565b60145461091b908263ffffffff61265016565b6014555b5050505b600101610819565b5060125461093f908363ffffffff61265016565b6012819055601e541161095a576010805460ff191660021790555b5050565b601d5481565b6001600160a01b0381166000908152601a60205260409020545b919050565b6002546001600160a01b031681565b60008060105460ff1660028111156109a657fe5b146109e25760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b610a4633601e805480602002602001604051908101604052809291908181526020018280548015610a3c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a1e575b505050505061282b565b610a815760405162461bcd60e51b815260040180806020018281038252602c81526020018061356b602c913960400191505060405180910390fd5b6000610a8e338483611377565b505050565b610a9b611c3e565b610ad65760405162461bcd60e51b81526004018080602001828103825260218152602001806133c76021913960400191505060405180910390fd5b60008060105460ff166002811115610aea57fe5b14610b265760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b600454600f54600091610b5191610b429163ffffffff61287f16565b6003549063ffffffff61265016565b9050804211610b915760405162461bcd60e51b81526004018080602001828103825260308152602001806135e56030913960400191505060405180910390fd5b600f54602354604080516332401b5760e11b815290516001600160a01b039092169163648036ae91600480820192602092909190829003018186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d6020811015610c0357600080fd5b50511015610c425760405162461bcd60e51b81526004018080602001828103825260308152602001806134426030913960400191505060405180910390fd5b6011545b601e5481108015610c685750601154610c65908563ffffffff61265016565b81105b15610d51576000601e8281548110610c7c57fe5b600091825260208083209190910154602354600f54604080516339d519c560e21b815260048101929092526001600160a01b039384166024830181905290519096508594939092169263e754671492604480840193829003018186803b158015610ce557600080fd5b505afa158015610cf9573d6000803e3d6000fd5b505050506040513d6020811015610d0f57600080fd5b505160215460009081526022602090815260408083206001600160a01b03909716835295905293909320805460ff191691909312151790915550600101610c46565b50601154610d65908463ffffffff61265016565b6011819055601e5411610a8e5750506021805460019081019091556010805460ff1916909117905550565b601e8181548110610d9d57fe5b6000918252602090912001546001600160a01b0316905081565b336000908152600c602052604090205460ff1690565b610dd5611c3e565b610e105760405162461bcd60e51b81526004018080602001828103825260218152602001806133c76021913960400191505060405180910390fd5b60008060105460ff166002811115610e2457fe5b14610e605760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b60008211610e9f5760405162461bcd60e51b81526004018080602001828103825260248152602001806132a66024913960400191505060405180910390fd5b600154604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015610ef957600080fd5b505af1158015610f0d573d6000803e3d6000fd5b505050506040513d6020811015610f2357600080fd5b5051610f6f576040805162461bcd60e51b8152602060048201526016602482015275546f6b656e207472616e73666572206661696c65642160501b604482015290519081900360640190fd5b601f54610f82908363ffffffff61265016565b601f555050565b6002546001600160a01b03163314610fd25760405162461bcd60e51b81526004018080602001828103825260278152602001806135976027913960400191505060405180910390fd5b60008060105460ff166002811115610fe657fe5b146110225760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b600454600f5460009161103e91610b429163ffffffff61287f16565b905080421161107e5760405162461bcd60e51b81526004018080602001828103825260308152602001806135e56030913960400191505060405180910390fd5b601e54601154611094908663ffffffff61265016565b11156110ed57601e5483516011546110b19163ffffffff61265016565b146110ed5760405162461bcd60e51b815260040180806020018281038252603381526020018061340f6033913960400191505060405180910390fd5b60115460005b601e54821080156111155750601154611112908763ffffffff61265016565b82105b156112275784818151811061112657fe5b60200260200101516022600060215481526020019081526020016000206000601e858154811061115257fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055601e80547f69e514cdcec7511d4b905b7b81d960d84822e90a49c9ec4b9224c8f92a1378dc9190849081106111b757fe5b9060005260206000200160009054906101000a90046001600160a01b03168683815181106111e157fe5b602002602001015160405180836001600160a01b03166001600160a01b03168152602001821515151581526020019250505060405180910390a1600191820191016110f3565b505060115461123c908563ffffffff61265016565b6011819055601e5411611263576021805460019081019091556010805460ff191690911790555b50505050565b602260209081526000928352604080842090915290825290205460ff1681565b6002546001600160a01b031633146112d25760405162461bcd60e51b81526004018080602001828103825260278152602001806135976027913960400191505060405180910390fd5b6001600160a01b03811661132d576040805162461bcd60e51b815260206004820152601d60248201527f4e6577204a75726920616464726573732063616e6e6f74206265203021000000604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600f5460105460115460125460135460145460155460165460175460185460ff98891698168a565b600061138384846128e2565b9050828110156113ae57600061139f848363ffffffff6126e216565b90506113ac85828561294b565b505b6001546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561140457600080fd5b505af1158015611418573d6000803e3d6000fd5b505050506040513d602081101561142e57600080fd5b5051611263576040805162461bcd60e51b8152602060048201526016602482015275546f6b656e207472616e73666572206661696c65642160501b604482015290519081900360640190fd5b60215481565b600354600454600554600654600754600854600954600a54600b5489565b6114a6611c3e565b6114e15760405162461bcd60e51b81526004018080602001828103825260218152602001806133c76021913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001600160a01b03166000908152600e602052604090205490565b601e5490565b60008060105460ff16600281111561156057fe5b1461159c5760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b611601336019600301805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b80611669575061166933601e805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b6116a45760405162461bcd60e51b815260040180806020018281038252603c81526020018061338b603c913960400191505060405180910390fd5b336000908152600d6020908152604080832054601a90925290912054836116fc5760405162461bcd60e51b81526004018080602001828103825260248152602001806132a66024913960400191505060405180910390fd5b600a5461170f838363ffffffff61265016565b1061174b5760405162461bcd60e51b81526004018080602001828103825260448152602001806133226044913960600191505060405180910390fd5b600b54601d546020546117639163ffffffff61265016565b1061179f5760405162461bcd60e51b81526004018080602001828103825260428152602001806135296042913960600191505060405180910390fd5b60006117b1828663ffffffff61265016565b600a5490915085906117c9858463ffffffff61265016565b11156117f4576117f16117e2858563ffffffff61265016565b600a549063ffffffff6126e216565b90505b6000611806848363ffffffff61265016565b600b54601d5460205492935090916118359184916118299163ffffffff61265016565b9063ffffffff61265016565b111561186757601d5460205461186491611855919063ffffffff61265016565b600b549063ffffffff6126e216565b91505b600154604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156118c157600080fd5b505af11580156118d5573d6000803e3d6000fd5b505050506040513d60208110156118eb57600080fd5b5051611937576040805162461bcd60e51b8152602060048201526016602482015275546f6b656e207472616e73666572206661696c65642160501b604482015290519081900360640190fd5b6000611949858463ffffffff61265016565b336000908152601a60205260409020819055601d54909150611971908463ffffffff61265016565b601d555050505050505050565b611986611c3e565b6119c15760405162461bcd60e51b81526004018080602001828103825260218152602001806133c76021913960400191505060405180910390fd5b60028060105460ff1660028111156119d557fe5b14611a115760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b601354611a3257611a206129b9565b6018805460ff19169115159190911790555b6013546000905b601e54611a4c828463ffffffff6126e216565b1080611a685750601c54611a66828463ffffffff6126e216565b105b8015611a855750601354611a82908563ffffffff61265016565b81105b15611bd2576000611a9c828463ffffffff6126e216565b601c54909150611ab390829063ffffffff61265016565b601e541115611ae657611ae6601e8281548110611acc57fe5b6000918252602090912001546001600160a01b03166129f4565b601e5481108015611b2f575060196002016000601e8381548110611b0657fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff165b15611b9257600060196002016000601e8481548110611b4a57fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055611b8781612a78565b600190920191611bc9565b601c54811015611bc957611bc960196003018281548110611baf57fe5b6000918252602090912001546001600160a01b0316612b5a565b50600101611a39565b50601354611bf8908290611bec908663ffffffff61265016565b9063ffffffff6126e216565b6013819055601e5411801590611c125750601c5460135410155b15610a8e57611c1f612be7565b611c27612cc2565b610a8e612d11565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60008060105460ff166002811115611c6357fe5b14611c9f5760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b611d04336019600301805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b80611d6c5750611d6c33601e805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b611da75760405162461bcd60e51b815260040180806020018281038252603c81526020018061338b603c913960400191505060405180910390fd5b50336000908152601960205260409020805460ff19169055565b611dc9611c3e565b611e045760405162461bcd60e51b81526004018080602001828103825260218152602001806133c76021913960400191505060405180910390fd5b60008060105460ff166002811115611e1857fe5b14611e545760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b816000611e5f612d3a565b905060008211611ea05760405162461bcd60e51b81526004018080602001828103825260258152602001806133666025913960400191505060405180910390fd5b6000601f5411611ef7576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2066756e647320617661696c61626c6520746f2077697468647261772100604482015290519081900360640190fd5b80600101601f5411611f3a5760405162461bcd60e51b81526004018080602001828103825260268152602001806134da6026913960400191505060405180910390fd5b611f4a818363ffffffff61265016565b601f541015611f6957601f54611f66908263ffffffff6126e216565b91505b6001546040805163a9059cbb60e01b81523360048201526024810185905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b158015611fbd57600080fd5b505af1158015611fd1573d6000803e3d6000fd5b505050506040513d6020811015611fe757600080fd5b5051612033576040805162461bcd60e51b8152602060048201526016602482015275546f6b656e207472616e73666572206661696c65642160501b604482015290519081900360640190fd5b601f54612046908363ffffffff6126e216565b601f5550505050565b6120b133601e805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b6120ec5760405162461bcd60e51b815260040180806020018281038252602c81526020018061356b602c913960400191505060405180910390fd5b60008060105460ff16600281111561210057fe5b1461213c5760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b336000908152601b602052604090205460ff16156121a1576040805162461bcd60e51b815260206004820181905260248201527f5573657220616c7265616479206d61726b656420666f722072656d6f76616c21604482015290519081900360640190fd5b336000908152601b60205260409020805460ff191660011790556121c3611c4f565b50565b601f5481565b60205481565b3360009081526019602052604090205460ff1690565b61224d336019600301805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b156122895760405162461bcd60e51b81526004018080602001828103825260328152602001806134a86032913960400191505060405180910390fd5b6122eb33601e805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b156123275760405162461bcd60e51b81526004018080602001828103825260278152602001806135be6027913960400191505060405180910390fd5b60008060105460ff16600281111561233b57fe5b146123775760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b6009548210156123b85760405162461bcd60e51b81526004018080602001828103825260368152602001806134726036913960400191505060405180910390fd5b601c80546001810182556000919091527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2110180546001600160a01b031916331790556124038261154c565b61095a612453565b6001600160a01b03166000908152601b602052604090205460ff1690565b6001600160a01b03166000908152600d602052604090205490565b6023546001600160a01b031681565b60008060105460ff16600281111561246757fe5b146124a35760405162461bcd60e51b81526004018080602001828103825260278152602001806133e86027913960400191505060405180910390fd5b612508336019600301805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b80612570575061257033601e805480602002602001604051908101604052809291908181526020018280548015610a3c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1e57505050505061282b565b6125ab5760405162461bcd60e51b815260040180806020018281038252603c81526020018061338b603c913960400191505060405180910390fd5b50336000908152601960205260409020805460ff19166001179055565b6125d0611c3e565b61260b5760405162461bcd60e51b81526004018080602001828103825260218152602001806133c76021913960400191505060405180910390fd5b6121c381612d84565b60006019600301828154811061262657fe5b6000918252602090912001546001600160a01b031692915050565b6001546001600160a01b031681565b60008282018381101561269e576040805162461bcd60e51b815260206004820152601160248201527053616665416464206f766572666c6f772160781b604482015290519081900360640190fd5b90505b92915050565b60006126a160646126d66126c96003800154606461265090919063ffffffff16565b859063ffffffff61287f16565b9063ffffffff612e3316565b60008282111561272e576040805162461bcd60e51b81526020600482015260126024820152715361666553756220756e646572666c6f772160701b604482015290519081900360640190fd5b50900390565b6001600160a01b0382166000908152600d6020908152604080832054600e90925282205490919061276b908363ffffffff6126e216565b6001600160a01b0385166000908152601a60205260408120549192509061279f908390611bec90879063ffffffff61265016565b6001600160a01b0386166000908152600d60209081526040808320849055600e8252808320849055601a90915281205590508281116127ff576127fa6127eb848363ffffffff6126e216565b6020549063ffffffff6126e216565b612821565b612821612812828563ffffffff6126e216565b6020549063ffffffff61265016565b6020555050505050565b600080805b835181101561287757846001600160a01b031684828151811061284f57fe5b60200260200101516001600160a01b0316141561286f5760019150612877565b600101612830565b509392505050565b60008261288e575060006126a1565b8282028284828161289b57fe5b041461269e576040805162461bcd60e51b8152602060048201526011602482015270536166654d756c206f766572666c6f772160781b604482015290519081900360640190fd5b6000806128ee84610964565b90508083101561292a57612908818463ffffffff6126e216565b6001600160a01b0385166000908152601a6020526040902055508190506126a1565b6001600160a01b0384166000908152601a6020526040812055905092915050565b600061295684612429565b9050600061296a828563ffffffff6126e216565b9050821561298d57602054612985908563ffffffff6126e216565b602055612997565b6129978582612e9d565b6001600160a01b039094166000908152600d6020526040902093909355505050565b6014546000906129cb5750600161077f565b6014546016546000916129e9916126d690606463ffffffff61287f16565b600754111591505090565b600f5460009081526022602090815260408083206001600160a01b038516845290915290205460ff1680158015612a4357506001600160a01b0382166000908152600c602052604090205460ff165b15612a6f576000612a538361152b565b90506000612a6082612f4b565b9050612a6c8482612734565b50505b61095a82612f9b565b6000601e8281548110612a8757fe5b60009182526020822001546001600160a01b03169150612ab2612aa983610964565b61182984612429565b90506001612ac1838383611377565b601e5460011015612b4057601e8054612ae190600163ffffffff6126e216565b81548110612aeb57fe5b600091825260209091200154601e80546001600160a01b039092169186908110612b1157fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b601e805490612b539060001983016131de565b5050505050565b601e805460018101825560009182527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3500180546001600160a01b0319166001600160a01b038416179055612baf908290612734565b6001600160a01b0316600090815260196020908152604080832054600c909252909120805460ff191660ff9092161515919091179055565b6001546002546017546040805163a9059cbb60e01b81526001600160a01b039384166004820152602481019290925251919092169163a9059cbb9160448083019260209291908290030181600087803b158015612c4357600080fd5b505af1158015612c57573d6000803e3d6000fd5b505050506040513d6020811015612c6d57600080fd5b5051612cc0576040805162461bcd60e51b815260206004820181905260248201527f4a757269206665657320746f6b656e207472616e73666572206661696c656421604482015290519081900360640190fd5b565b60185460ff1615612cc057600854601454600091612ced916064916126d6919063ffffffff61287f16565b601454909150600090612d06908363ffffffff6126e216565b905061095a81613053565b600f54612d209060010161307f565b612d2861314d565b612d30613199565b6017819055601655565b600080612d67612d586003800154606461265090919063ffffffff16565b6020549063ffffffff61287f16565b9050612d7e602054826126e290919063ffffffff16565b91505090565b6001600160a01b038116612dd8576040805162461bcd60e51b81526020600482015260166024820152754e6577206f776e65722063616e6e6f7420626520302160501b604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000808211612e89576040805162461bcd60e51b815260206004820152601b60248201527f536166654469762063616e6e6f74206469766964652062792030210000000000604482015290519081900360640190fd5b6000828481612e9457fe5b04949350505050565b6000612ea88361152b565b90506000612eb5826131bf565b90506000612ec9838363ffffffff6126e216565b905080841015612f0a5760405162461bcd60e51b815260040180806020018281038252602e8152602001806132ca602e913960400191505060405180910390fd5b600954841015612b535760405162461bcd60e51b815260040180806020018281038252602a8152602001806132f8602a913960400191505060405180910390fd5b60185460009060ff1615612f6957612f62826131bf565b905061097e565b601454601654612f93826126d6612f86828563ffffffff6126e216565b879063ffffffff61287f16565b949350505050565b6000612fa682612429565b6001600160a01b0383166000908152600c602052604090205490915060ff1661301a576001600160a01b0382166000908152601a6020526040902054612ff2908263ffffffff61265016565b6001600160a01b0383166000908152600d6020908152604080832093909355601a9052908120555b506001600160a01b0316600090815260196020908152604080832054600c909252909120805460ff191660ff9092161515919091179055565b601654600090613069908363ffffffff6126e216565b601f54909150610f82908263ffffffff6126e216565b60408051610140810182528281526000602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905260e084018390526101008401839052610120909301829052600f8590556010805460ff199081169091556011839055601283905560138390556014839055601583905560168390556017839055601880549091169055835180850183815293810194859052838152908101919091529051909160199161313c91601c91613202565b506020820151816004015590505050565b6000613157612d3a565b905080601f54116121c35760405162461bcd60e51b81526004018080602001828103825260298152602001806135006029913960400191505060405180910390fd5b60006131ba60646126d660036002015460205461287f90919063ffffffff16565b905090565b60006126a160646126d66003600501548561287f90919063ffffffff16565b815481835581811115610a8e57600083815260209020610a8e918101908301613267565b828054828255906000526020600020908101928215613257579160200282015b8281111561325757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613222565b50613263929150613281565b5090565b61077f91905b80821115613263576000815560010161326d565b61077f91905b808211156132635780546001600160a01b031916815560010161328756fe506c65617365207061737320616e20616d6f756e7420686967686572207468616e20302143616e6e6f74207769746864726177206d6f7265207468616e2073616665207374616b696e6720616d6f756e742143616e6e6f74207769746864726177206d6f7265207468616e206d696e5374616b65506572557365722143616e6e6f7420616464206d6f72652066756e647320666f7220757365722c206265636175736520746865206d6178207065722075736572206973207265616368656421506c65617365207061737320616e20616d6f756e7420686967686572207468616e203021214f6e6c7920706f6f6c207573657273206f722070656e64696e6720706f6f6c2075736572732063616e2075736520746869732066756e6374696f6e214f6e6c79206f776e65722063616e2075736520746869732066756e6374696f6e2146756e6374696f6e2063616e6e6f742062652063616c6c656420617420746869732074696d6521436f6d706c69616e63652064617461206c656e677468206d757374206d6174636820706f6f6c2075736572732061727261792154686520726573756c747320666f722074686520726f756e6420617265206e6f7420617661696c61626c652079657421506c656173652070617373206174206c6561737420746865206d696e207374616b6520706572207573657220617320616d6f756e74214f6e6c79206e6f6e2d70656e64696e6720706f6f6c2075736572732063616e2075736520746869732066756e6374696f6e2143616e6e6f742077697468647261772062656c6f77206d696e206f776e65722066756e647321506f6f6c206973206e6f742073756666696369656e746c792066756e646564206279206f776e65722143616e6e6f7420616464206d6f72652066756e647320746f20706f6f6c2c206265636175736520746865206d617820696e20706f6f6c2069732072656163686564214f6e6c7920616464656420706f6f6c2075736572732063616e2075736520746869732066756e6374696f6e214f6e6c79206a757269416464726573732063616e2075736520746869732066756e6374696f6e214f6e6c79206e6f6e2d6d656d626572732063616e2075736520746869732066756e6374696f6e2143616e206f6e6c7920616464206e6577206461746120616674657220656e64206f6620706572696f644c656e67746821a265627a7a7230582075826fb90fe2438c6d372628b1d7d0540897bc384b90ef1ba91715eb0a46e5bb64736f6c634300050a0032436f6d706c69616e74206761696e2070657263656e74616765206d7573742062652061206e756d626572206265747765656e203020616e6420313030214665652070657263656e74616765206d7573742062652061206e756d626572206265747765656e203020616e6420313030214d6178206e6f6e2d636f6d706c69616e742070656e616c74792070657263656e74616765206d7573742062652061206e756d626572206265747765656e203020616e6420313030214d6178207374616b652070657220757365722063616e6e6f742062652030210053746172742074696d65206d75737420626520696e207468652066757475726521",
  "deployedBytecode": "",
  "sourceMap": "97:2631:11:-;;;196:731;8:9:-1;5:2;;;30:1;27;20:12;5:2;196:731:11;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;196:731:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;558:6:6;:19;;-1:-1:-1;;;;;;558:19:6;567:10;558:19;;;;593:40;;196:731:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;626:6:6;;558;593:40;;558:6;;593:40;-1:-1:-1;;;;;5016:29:0;;4994:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5135:3;5122:10;:16;5114:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5211:1;5195:13;:17;5187:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5317:3;5299:14;:21;;5254:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5492:3;5464:24;:31;;5409:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5696:3;5659:33;:40;;5595:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5837:1;5818:16;:20;5810:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5912:1;5893:16;:20;5885:64;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5885:64:0;;;;;;;;;;;;;;;5985:1;5968:14;:18;5960:62;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5960:62:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;6041:26:0;;6033:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6123:1;6110:10;:14;;;6135;:18;;;6164:19;:23;;;6200:29;;-1:-1:-1;;;;;6200:26:0;:29;:::i;:::-;6242:5;:14;;-1:-1:-1;;;;;6242:14:0;;;-1:-1:-1;;;;;;6242:14:0;;;;;;;6267:11;:26;;;;;;;;;;;;;;;6323:351;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6521:51;;6529:3;;6473:33;;6521:16;;;;;:51;;:::i;:::-;6323:351;;;;6587:16;6323:351;;;;6618:16;6323:351;;;;6649:14;6323:351;;;6306:14;:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4610:2072;;;;;;;;;;913:6:11;905:5;;:14;;;;;-1:-1:-1;;;;;905:14:11;;;;;-1:-1:-1;;;;;905:14:11;;;;;;196:731;;;;;;;;;;;97:2631;;31466:316:0;31564:117;;;;;;;;;;;-1:-1:-1;31564:117:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31542:139;;;;;;;-1:-1:-1;;31542:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31713:61;;;;;31744:16;;;;;;;;;;31713:61;;;;;;;;;;31694:80;;31713:61;;31694:16;;:80;;;;;:::i;:::-;;;;;;;;;;;;;31466:316;:::o;1303:172:7:-;1361:7;1394:1;1389;:6;;1381:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1441:5:7;;;1303:172::o;97:2631:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;97:2631:11;-1:-1:-1;;;;;97:2631:11;;;;;;;;;;;-1:-1:-1;97:2631:11;;;;;;;-1:-1:-1;97:2631:11;;;-1:-1:-1;97:2631:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;97:2631:11;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "97:2631:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;97:2631:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21939:122:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;21939:122:0;;;;;;;;;;;;;;;;;15278:1602;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15278:1602:0;;:::i;:::-;;1694:40;;;:::i;:::-;;;;;;;;;;;;;;;;21668:173;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21668:173:0;-1:-1:-1;;;;;21668:173:0;;:::i;1544:26::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1544:26:0;;;;;;;;;;;;;;11079:220;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11079:220:0;;:::i;1195:1530:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1195:1530:11;;:::i;1743:22:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1743:22:0;;:::i;20013:166::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;11363:395;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11363:395:0;;:::i;12994:2033::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12994:2033:0;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;12994:2033:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12994:2033:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12994:2033:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12994:2033:0;;-1:-1:-1;12994:2033:0;;-1:-1:-1;;;;;12994:2033:0:i;1883:74::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1883:74:0;;;;;;-1:-1:-1;;;;;1883:74:0;;:::i;19107:202::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19107:202:0;-1:-1:-1;;;;;19107:202:0;;:::i;1641:46::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1641:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1641:46:0;-1:-1:-1;1641:46:0;25792:583;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;25792:583:0;;;;;;;;;;;;;;;:::i;1842:34::-;;;:::i;1577:36::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:140:6;;;:::i;21360:173:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21360:173:0;-1:-1:-1;;;;;21360:173:0;;:::i;19379:96::-;;;:::i;7937:2326::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7937:2326:0;;:::i;17132:1848::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17132:1848:0;;:::i;709:79:6:-;;;:::i;1081:92::-;;;:::i;10679:217:0:-;;;:::i;11876:779::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11876:779:0;;:::i;7413:372::-;;;:::i;1772:25::-;;;:::i;1804:29::-;;;:::i;20343:160::-;;;:::i;6840:479::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6840:479:0;;:::i;20712:176::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20712:176:0;-1:-1:-1;;;;;20712:176:0;;:::i;21022:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21022:164:0;-1:-1:-1;;;;;21022:164:0;;:::i;158:29:11:-;;;:::i;10363:216:0:-;;;:::i;1853:109:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1853:109:6;-1:-1:-1;;;;;1853:109:6;;:::i;19666:175:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19666:175:0;;:::i;1518:19::-;;;:::i;21939:122::-;22007:16;22048:5;22041:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22041:12:0;;;;;;;;;;;;;;;;;;;;;;;21939:122;;:::o;15278:1602::-;921:9:6;:7;:9::i;:::-;913:55;;;;-1:-1:-1;;;913:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15424:28:0;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15501:39;;15470:1094;15559:5;:12;15555:16;;:129;;;;-1:-1:-1;15596:39:0;;:88;;15662:21;15596:88;:65;:88;:::i;:::-;15575:1;:109;15555:129;15470:1094;;;15729:12;15744:5;15750:1;15744:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15744:8:0;15774:39;;;:19;:39;;;;;;;;15744:8;;-1:-1:-1;15774:39:0;;15769:89;;15834:8;;;15769:89;15934:30;;15874:17;15894:71;;;:21;:71;;;;;;;;-1:-1:-1;;;;;15894:95:0;;;;;;;;;;;;;16022:33;15984:4;16022:27;:33::i;:::-;16006:49;;16076:12;16072:481;;;16109:16;16128:32;16154:5;16128:25;:32::i;:::-;16109:51;-1:-1:-1;16179:12:0;16194:19;16109:51;16207:5;16194:19;:12;:19;:::i;:::-;16287:31;;16179:34;;-1:-1:-1;16287:41:0;;16179:34;16287:41;:35;:41;:::i;:::-;16232:31;:96;16349:38;16372:4;16378:8;16349:22;:38::i;:::-;16072:481;;;;;16489:37;;:48;;16531:5;16489:48;:41;:48;:::i;:::-;16428:37;:109;16072:481;15470:1094;;;;15699:3;;15470:1094;;;-1:-1:-1;16631:39:0;;:84;;16693:21;16631:84;:61;:84;:::i;:::-;16576:39;:139;;;16775:5;:12;-1:-1:-1;16728:145:0;;16804:25;:57;;-1:-1:-1;;16804:57:0;16832:29;16804:57;;;16728:145;979:1:6;15278:1602:0;:::o;1694:40::-;;;;:::o;21668:173::-;-1:-1:-1;;;;;21794:39:0;;21767:7;21794:39;;;:32;:39;;;;;;21668:173;;;;:::o;1544:26::-;;;-1:-1:-1;;;;;1544:26:0;;:::o;11079:220::-;11145:31;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2513:29;2524:10;2536:5;2513:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2513:29:0;;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;2491:123;;;;-1:-1:-1;;;2491:123:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11200:19;11238:53;11255:10;11267:7;11200:19;11238:16;:53::i;:::-;2627:1;11079:220;;:::o;1195:1530:11:-;921:9:6;:7;:9::i;:::-;913:55;;;;-1:-1:-1;;;913:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:31:11;;2238:25:0;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1477:27:11;;1442:30;;1364:32;;1399:117;;1442:63;;;:34;:63;:::i;:::-;1399:14;:24;;:117;:28;:117;:::i;:::-;1364:152;;1555:24;1549:3;:30;1527:128;;;;-1:-1:-1;;;1527:128:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:30;;1690:5;;:18;;;-1:-1:-1;;;1690:18:11;;;;-1:-1:-1;;;;;1690:5:11;;;;:16;;:18;;;;;;;;;;;;;;;:5;:18;;;5:2:-1;;;;30:1;27;20:12;5:2;1690:18:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1690:18:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1690:18:11;:52;;1668:150;;;;-1:-1:-1;;;1668:150:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:42;;1831:534;1923:5;:12;1919:16;;:132;;;;-1:-1:-1;1960:42:11;;:91;;2029:21;1960:91;:68;:91;:::i;:::-;1939:1;:112;1919:132;1831:534;;;2096:12;2111:5;2117:1;2111:8;;;;;;;;;;;;;;;;;;;;;2154:5;;2200:30;;2154:114;;;-1:-1:-1;;;2154:114:11;;;;;;;;;-1:-1:-1;;;;;2111:8:11;;;2154:114;;;;;;;;2111:8;;-1:-1:-1;2111:8:11;;2154:5;;;;;:27;;:114;;;;;;;;;;:5;:114;;;5:2:-1;;;;30:1;27;20:12;5:2;2154:114:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2154:114:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2154:114:11;2312:19;;2290:42;;;;:21;2154:114;2290:42;;;;;;;-1:-1:-1;;;;;2290:48:11;;;;;;;;;;;;:63;;-1:-1:-1;;2290:63:11;2154:119;;;;;2290:63;;;;-1:-1:-1;2290:63:11;2066:3;1831:534;;;-1:-1:-1;2435:42:11;;:87;;2500:21;2435:87;:64;:87;:::i;:::-;2377:42;:145;;;2585:5;:12;-1:-1:-1;2535:183:11;;-1:-1:-1;;2614:19:11;:21;;;;;;;;;2650:25;:56;;-1:-1:-1;;2650:56:11;;;;;;-1:-1:-1;1195:1530:11:o;1743:22:0:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1743:22:0;;-1:-1:-1;1743:22:0;:::o;20013:166::-;20160:10;20097:4;20126:45;;;:19;:45;;;;;;;;20013:166;:::o;11363:395::-;921:9:6;:7;:9::i;:::-;913:55;;;;-1:-1:-1;;;913:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11455:31:0;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11522:1;11512:7;:11;11504:60;;;;-1:-1:-1;;;11504:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11597:5;;:54;;;-1:-1:-1;;;11597:54:0;;11616:10;11597:54;;;;11636:4;11597:54;;;;;;;;;;;;-1:-1:-1;;;;;11597:5:0;;;;:18;;:54;;;;;;;;;;;;;;;:5;;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;11597:54:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11597:54:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11597:54:0;11575:126;;;;;-1:-1:-1;;;11575:126:0;;;;;;;;;;;;-1:-1:-1;;;11575:126:0;;;;;;;;;;;;;;;11727:10;;:23;;11742:7;11727:23;:14;:23;:::i;:::-;11714:10;:36;-1:-1:-1;;11363:395:0:o;12994:2033::-;3731:11;;-1:-1:-1;;;;;3731:11:0;3717:10;:25;3695:114;;;;-1:-1:-1;;;3695:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13172:31;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13640:27;;13605:30;;13527:32;;13562:117;;13605:63;;;:34;:63;:::i;13562:117::-;13527:152;;13718:24;13712:3;:30;13690:128;;;;-1:-1:-1;;;13690:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13921:5;:12;13835:42;;:83;;13896:21;13835:83;:60;:83;:::i;:::-;:98;13831:360;;;14080:5;:12;14055:20;;13986:42;;:90;;;:68;:90;:::i;:::-;:106;13960:219;;;;-1:-1:-1;;;13960:219:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14248:42;;14223:9;14203:464;14313:5;:12;14309:16;;:132;;;;-1:-1:-1;14350:42:0;;:91;;14419:21;14350:91;:68;:91;:::i;:::-;14329:1;:112;14309:132;14203:464;;;14565:13;14579:1;14565:16;;;;;;;;;;;;;;14493:21;:42;14515:19;;14493:42;;;;;;;;;;;:52;14536:5;14542:1;14536:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14536:8:0;14493:52;;;;;;;;;;;;:88;;-1:-1:-1;;14493:88:0;;;;;;;;;;14628:5;:8;;14601:54;;14628:5;14634:1;;14628:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14628:8:0;14638:13;14652:1;14638:16;;;;;;;;;;;;;;14601:54;;;;-1:-1:-1;;;;;14601:54:0;-1:-1:-1;;;;;14601:54:0;;;;;;;;;;;;;;;;;;;;;;;;;14457:3;;;;;14462;14203:464;;;-1:-1:-1;;14737:42:0;;:87;;14802:21;14737:87;:64;:87;:::i;:::-;14679:42;:145;;;14887:5;:12;-1:-1:-1;14837:183:0;;14916:19;:21;;;;;;;;;14952:25;:56;;-1:-1:-1;;14952:56:0;;;;;;14837:183;2353:1;3822;12994:2033;;:::o;1883:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;19107:202::-;3731:11;;-1:-1:-1;;;;;3731:11:0;3717:10;:25;3695:114;;;;-1:-1:-1;;;3695:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19196:29:0;;19188:71;;;;;-1:-1:-1;;;19188:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;19272:11;:29;;-1:-1:-1;;;;;;19272:29:0;-1:-1:-1;;;;;19272:29:0;;;;;;;;;;19107:202::o;1641:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25792:583::-;25924:31;25971:39;25995:5;26002:7;25971:23;:39::i;:::-;25924:86;;26053:7;26027:23;:33;26023:230;;;26077:33;26113:36;:7;26125:23;26113:36;:11;:36;:::i;:::-;26077:72;;26164:77;26191:5;26198:25;26225:15;26164:26;:77::i;:::-;26023:230;;26287:5;;:30;;;-1:-1:-1;;;26287:30:0;;-1:-1:-1;;;;;26287:30:0;;;;;;;;;;;;;;;:5;;;;;:14;;:30;;;;;;;;;;;;;;:5;;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;26287:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26287:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26287:30:0;26265:102;;;;;-1:-1:-1;;;26265:102:0;;;;;;;;;;;;-1:-1:-1;;;26265:102:0;;;;;;;;;;;;;;1842:34;;;;:::o;1577:36::-;;;;;;;;;;;;;;;;;;;;:::o;1536:140:6:-;921:9;:7;:9::i;:::-;913:55;;;;-1:-1:-1;;;913:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:1;1619:6;;1598:40;;-1:-1:-1;;;;;1619:6:6;;;;1598:40;;1635:1;;1598:40;1666:1;1649:19;;-1:-1:-1;;;;;;1649:19:6;;;1536:140::o;21360:173:0:-;-1:-1:-1;;;;;21476:49:0;21449:7;21476:49;;;:42;:49;;;;;;;21360:173::o;19379:96::-;19455:5;:12;19379:96;:::o;7937:2326::-;8022:31;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:51;3362:10;3374:16;:27;;3351:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3351:51:0;;;;;;;;;;;;;;;;;;;;:10;:51::i;:::-;:97;;;;3419:29;3430:10;3442:5;3419:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3419:29:0;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;3329:207;;;;-1:-1:-1;;;3329:207:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8289:10;8214:28;8258:42;;;:30;:42;;;;;;;;;8352:32;:44;;;;;;;8417:11;8409:60;;;;-1:-1:-1;;;8409:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8548:30;;8502:43;:20;8527:17;8502:43;:24;:43;:::i;:::-;:76;8480:194;;;;-1:-1:-1;;;8480:194:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8762:28;;8726:32;;8707:14;;:52;;;:18;:52;:::i;:::-;:83;8685:199;;;;-1:-1:-1;;;8685:199:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8897:28;8928:30;:17;8950:7;8928:30;:21;:30;:::i;:::-;9102;;8897:61;;-1:-1:-1;8998:7:0;;9036:46;:20;8897:61;9036:46;:24;:46;:::i;:::-;:96;9018:285;;;9180:111;9233:43;:20;9258:17;9233:43;:24;:43;:::i;:::-;9180:30;;;:111;:34;:111;:::i;:::-;9159:132;;9018:285;9315:36;9367:41;:17;9389:18;9367:41;:21;:41;:::i;:::-;9581:28;;9476:32;;9439:14;;9315:93;;-1:-1:-1;9581:28:0;;9439:122;;9315:93;;9439:70;;;:36;:70;:::i;:::-;:92;:122;:92;:122;:::i;:::-;:170;9421:366;;;9727:32;;9708:14;;9657:118;;9708:52;;:14;:52;:18;:52;:::i;:::-;9657:28;;;:118;:32;:118;:::i;:::-;9636:139;;9421:366;9821:5;;:65;;;-1:-1:-1;;;9821:65:0;;9840:10;9821:65;;;;9860:4;9821:65;;;;;;;;;;;;-1:-1:-1;;;;;9821:5:0;;;;:18;;:65;;;;;;;;;;;;;;;:5;;:65;;;5:2:-1;;;;30:1;27;20:12;5:2;9821:65:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9821:65:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9821:65:0;9799:137;;;;;-1:-1:-1;;;9799:137:0;;;;;;;;;;;;-1:-1:-1;;;9799:137:0;;;;;;;;;;;;;;;9949:35;10000:41;:17;10022:18;10000:41;:21;:41;:::i;:::-;10085:10;10052:44;;;;:32;:44;;;;;:87;;;10185:32;;9949:92;;-1:-1:-1;10185:70:0;;10236:18;10185:70;:50;:70;:::i;:::-;10150:32;:105;-1:-1:-1;;;;;;;;7937:2326:0:o;17132:1848::-;921:9:6;:7;:9::i;:::-;913:55;;;;-1:-1:-1;;;913:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17279:29:0;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17330:39;;17326:148;;17433:29;:27;:29::i;:::-;17391:39;:71;;-1:-1:-1;;17391:71:0;;;;;;;;;;17326:148;17566:39;;17486:24;;17527:975;17655:5;:12;17621:31;:9;17635:16;17621:31;:13;:31;:::i;:::-;:46;:135;;;-1:-1:-1;17722:27:0;:34;17688:31;:9;17702:16;17688:31;:13;:31;:::i;:::-;:68;17621:135;17620:251;;;;-1:-1:-1;17787:39:0;;:84;;17849:21;17787:84;:61;:84;:::i;:::-;17775:9;:96;17620:251;17527:975;;;17924:9;17936:31;:9;17950:16;17936:31;:13;:31;:::i;:::-;18009:27;:34;17924:43;;-1:-1:-1;18003:41:0;;17924:43;;18003:41;:5;:41;:::i;:::-;17988:5;:12;:56;17984:133;;;18065:36;18092:5;18098:1;18092:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18092:8:0;18065:26;:36::i;:::-;18137:5;:12;:16;-1:-1:-1;18137:60:0;;;;;18157:16;:30;;:40;18188:5;18194:1;18188:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18188:8:0;18157:40;;;;;;;;;;;;;;;18137:60;18133:358;;;18261:5;18218:16;:30;;:40;18249:5;18255:1;18249:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18249:8:0;18218:40;;;;;;;;;;;;:48;;-1:-1:-1;;18218:48:0;;;;;;;;;;18285:21;18304:1;18285:18;:21::i;:::-;18325:18;;;;;18133:358;;;18369:27;:34;:38;-1:-1:-1;18365:126:0;;;18428:47;18444:16;:27;;18472:1;18444:30;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18444:30:0;18428:15;:47::i;:::-;-1:-1:-1;17886:11:0;;17527:975;;;-1:-1:-1;18569:39:0;;:106;;18658:16;;18569:66;;18613:21;18569:66;:43;:66;:::i;:::-;:88;:106;:88;:106;:::i;:::-;18514:39;:161;;;18735:5;:12;-1:-1:-1;18692:55:0;;;:149;;-1:-1:-1;18807:27:0;:34;18764:39;;:77;;18692:149;18688:285;;;18868:17;:15;:17::i;:::-;18900:21;:19;:21::i;:::-;18936:25;:23;:25::i;709:79:6:-;747:7;774:6;-1:-1:-1;;;;;774:6:6;709:79;:::o;1081:92::-;1121:4;1159:6;-1:-1:-1;;;;;1159:6:6;1145:10;:20;;1081:92::o;10679:217:0:-;10752:31;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:51;3362:10;3374:16;:27;;3351:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3351:51:0;;;;;;;;;;;;;;;;;;;;:10;:51::i;:::-;:97;;;;3419:29;3430:10;3442:5;3419:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3419:29:0;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;3329:207;;;;-1:-1:-1;;;3329:207:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10869:10:0;10883:5;10838:42;;;:16;:42;;;;;:50;;-1:-1:-1;;10838:50:0;;;10679:217::o;11876:779::-;921:9:6;:7;:9::i;:::-;913:55;;;;-1:-1:-1;;;913:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11962:31:0;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12023:7;12006:14;12065:23;:21;:23::i;:::-;12041:47;;12118:1;12109:6;:10;12101:60;;;;-1:-1:-1;;;12101:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12193:1;12180:10;;:14;12172:58;;;;;-1:-1:-1;;;12172:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12278:13;12294:1;12278:17;12265:10;;:30;12243:118;;;;-1:-1:-1;;;12243:118:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12391:25;:13;12409:6;12391:25;:17;:25;:::i;:::-;12378:10;;:38;12374:109;;;12442:10;;:29;;12457:13;12442:29;:14;:29;:::i;:::-;12433:38;;12374:109;12517:5;;:34;;;-1:-1:-1;;;12517:34:0;;12532:10;12517:34;;;;;;;;;;;;-1:-1:-1;;;;;12517:5:0;;;;:14;;:34;;;;;;;;;;;;;;;:5;;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;12517:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12517:34:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12517:34:0;12495:106;;;;;-1:-1:-1;;;12495:106:0;;;;;;;;;;;;-1:-1:-1;;;12495:106:0;;;;;;;;;;;;;;;12625:10;;:22;;12640:6;12625:22;:14;:22;:::i;:::-;12612:10;:35;-1:-1:-1;;;;11876:779:0:o;7413:372::-;2513:29;2524:10;2536:5;2513:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2513:29:0;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;2491:123;;;;-1:-1:-1;;;2491:123:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7500:31;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7603:10;7572:42;;;;:30;:42;;;;;;;;7571:43;7549:125;;;;;-1:-1:-1;;;7549:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:10;7687:42;;;;:30;:42;;;;;:49;;-1:-1:-1;;7687:49:0;7732:4;7687:49;;;7747:30;:28;:30::i;:::-;2627:1;7413:372::o;1772:25::-;;;;:::o;1804:29::-;;;;:::o;20343:160::-;20484:10;20424:4;20453:42;;;:16;:42;;;;;;;;20343:160;:::o;6840:479::-;3045:51;3056:10;3068:16;:27;;3045:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3045:51:0;;;;;;;;;;;;;;;;;;;;:10;:51::i;:::-;3044:52;3022:152;;;;-1:-1:-1;;;3022:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:29;2789:10;2801:5;2778:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2778:29:0;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;2777:30;2755:119;;;;-1:-1:-1;;;2755:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6972:31;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7054:30;;7043:41;;;7021:145;;;;-1:-1:-1;;;7021:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7179:27;27:10:-1;;39:1;23:18;;45:23;;-1:-1;7179:44:0;;;;;;;;-1:-1:-1;;;;;;7179:44:0;7212:10;7179:44;;;7236:34;7262:7;7236:25;:34::i;:::-;7281:30;:28;:30::i;20712:176::-;-1:-1:-1;;;;;20843:37:0;20814:4;20843:37;;;:30;:37;;;;;;;;;20712:176::o;21022:164::-;-1:-1:-1;;;;;21141:37:0;21114:7;21141:37;;;:30;:37;;;;;;;21022:164::o;158:29:11:-;;;-1:-1:-1;;;;;158:29:11;;:::o;10363:216:0:-;10436:31;;2238:25;;;;:35;;;;;;;;;2216:124;;;;-1:-1:-1;;;2216:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:51;3362:10;3374:16;:27;;3351:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3351:51:0;;;;;;;;;;;;;;;;;;;;:10;:51::i;:::-;:97;;;;3419:29;3430:10;3442:5;3419:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3419:29:0;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;3329:207;;;;-1:-1:-1;;;3329:207:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10553:10:0;10522:30;:42;;;:16;:42;;;;;:49;;-1:-1:-1;;10522:49:0;10567:4;10522:49;;;10363:216::o;1853:109:6:-;921:9;:7;:9::i;:::-;913:55;;;;-1:-1:-1;;;913:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:28;1945:8;1926:18;:28::i;19666:175:0:-;19766:7;19798:16;:27;;19826:6;19798:35;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19798:35:0;;19666:175;-1:-1:-1;;19666:175:0:o;1518:19::-;;;-1:-1:-1;;;;;1518:19:0;;:::o;1563:171:7:-;1621:7;1653:5;;;1677:6;;;;1669:36;;;;;-1:-1:-1;;;1669:36:7;;;;;;;;;;;;-1:-1:-1;;;1669:36:7;;;;;;;;;;;;;;;1725:1;-1:-1:-1;1563:171:7;;;;;:::o;28229:253:0:-;28333:7;28365:109;28470:3;28365:86;28394:56;28411:14;:38;;;28402:3;28394:16;;:56;;;;:::i;:::-;28365:10;;:86;:28;:86;:::i;:::-;:104;:109;:104;:109;:::i;1303:172:7:-;1361:7;1394:1;1389;:6;;1381:37;;;;;-1:-1:-1;;;1381:37:7;;;;;;;;;;;;-1:-1:-1;;;1381:37:7;;;;;;;;;;;;;;;-1:-1:-1;1441:5:7;;;1303:172::o;23275:790:0:-;-1:-1:-1;;;;;23379:37:0;;23360:16;23379:37;;;:30;:37;;;;;;;;;23447:42;:49;;;;;;23379:37;;23360:16;23447:106;;23379:37;23447:106;:67;:106;:::i;:::-;-1:-1:-1;;;;;23617:39:0;;23566:20;23617:39;;;:32;:39;;;;;;23427:126;;-1:-1:-1;23566:20:0;23589:97;;23427:126;;23589:68;;:9;;:68;:27;:68;:::i;:97::-;-1:-1:-1;;;;;23699:37:0;;;;;;:30;:37;;;;;;;;:52;;;23762:42;:49;;;;;:64;;;23837:32;:39;;;;;:43;23566:120;-1:-1:-1;23910:23:0;;;:147;;24011:46;24030:26;:8;24043:12;24030:26;:12;:26;:::i;:::-;24011:14;;;:46;:18;:46;:::i;:::-;23910:147;;;23949:46;23968:26;:12;23985:8;23968:26;:16;:26;:::i;:::-;23949:14;;;:46;:18;:46;:::i;:::-;23893:14;:164;-1:-1:-1;;;;;23275:790:0:o;22766:364::-;22873:4;;;22925:169;22949:6;:13;22945:1;:17;22925:169;;;23001:5;-1:-1:-1;;;;;22988:18:0;:6;22995:1;22988:9;;;;;;;;;;;;;;-1:-1:-1;;;;;22988:18:0;;22984:99;;;23039:4;23027:16;;23062:5;;22984:99;22964:3;;22925:169;;;-1:-1:-1;23113:9:0;22766:364;-1:-1:-1;;;22766:364:0:o;242:454:7:-;300:7;544:6;540:47;;-1:-1:-1;574:1:7;567:8;;540:47;611:5;;;615:1;611;:5;:1;635:5;;;;;:10;627:40;;;;;-1:-1:-1;;;627:40:7;;;;;;;;;;;;-1:-1:-1;;;627:40:7;;;;;;;;;;;;;;25266:518:0;25373:7;25393:26;25422:68;25474:5;25422:37;:68::i;:::-;25393:97;;25517:18;25507:7;:28;25503:182;;;25611:31;:18;25634:7;25611:31;:22;:31;:::i;:::-;-1:-1:-1;;;;;25552:39:0;;;;;;:32;:39;;;;;:90;-1:-1:-1;25666:7:0;;-1:-1:-1;25659:14:0;;25503:182;-1:-1:-1;;;;;25697:39:0;;25739:1;25697:39;;;:32;:39;;;;;:43;25758:18;-1:-1:-1;25266:518:0;;;;:::o;24073:530::-;24216:13;24232:37;24263:5;24232:30;:37::i;:::-;24216:53;-1:-1:-1;24280:26:0;24309:18;24216:53;24319:7;24309:18;:9;:18;:::i;:::-;24280:47;;24344:15;24340:185;;;24393:14;;:27;;24412:7;24393:27;:18;:27;:::i;:::-;24376:14;:44;24340:185;;;24453:60;24487:5;24494:18;24453:33;:60::i;:::-;-1:-1:-1;;;;;24537:37:0;;;;;;;:30;:37;;;;;:58;;;;-1:-1:-1;;;24073:530:0:o;28490:462::-;28572:37;;28551:4;;28568:122;;-1:-1:-1;28674:4:0;28667:11;;28568:122;28804:37;;28731:31;;28702:26;;28731:111;;:54;;28781:3;28731:54;:49;:54;:::i;:111::-;28897:47;;-1:-1:-1;28862:82:0;;-1:-1:-1;;28490:462:0;:::o;27714:507::-;27840:30;;27784:17;27804:67;;;:21;:67;;;;;;;;-1:-1:-1;;;;;27804:88:0;;;;;;;;;;;;27909:13;;:57;;;;-1:-1:-1;;;;;;27926:40:0;;:33;:40;;;:19;:40;;;;;;;;27909:57;27905:269;;;27983:16;28002:34;28030:5;28002:27;:34::i;:::-;27983:53;;28051:16;28070:38;28099:8;28070:28;:38::i;:::-;28051:57;;28123:39;28146:5;28153:8;28123:22;:39::i;:::-;27905:269;;;28186:27;28207:5;28186:20;:27::i;26639:519::-;26702:20;26725:5;26731:6;26725:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26725:13:0;;-1:-1:-1;26773:115:0;26836:51;26725:13;26836:37;:51::i;:::-;26773:44;26804:12;26773:30;:44::i;:115::-;26751:137;-1:-1:-1;26921:4:0;26936:59;26953:12;26751:137;26921:4;26936:16;:59::i;:::-;27012:5;:12;27027:1;-1:-1:-1;27008:118:0;;;27061:5;27067:12;;:19;;27084:1;27067:19;:16;:19;:::i;:::-;27061:26;;;;;;;;;;;;;;;;;;27045:5;:13;;-1:-1:-1;;;;;27061:26:0;;;;27051:6;;27045:13;;;;;;;;;;;;;;:42;;;;;-1:-1:-1;;;;;27045:42:0;;;;;-1:-1:-1;;;;;27045:42:0;;;;;;27008:118;27136:5;:14;;;;;-1:-1:-1;;27136:14:0;;;:::i;:::-;;26639:519;;;;:::o;26383:248::-;26445:5;27:10:-1;;39:1;23:18;;45:23;;-1:-1;26445:20:0;;;;;;;-1:-1:-1;;;;;;26445:20:0;-1:-1:-1;;;;;26445:20:0;;;;;26476:35;;26445:20;;26476:22;:35::i;:::-;-1:-1:-1;;;;;26583:40:0;:30;:40;;;:16;:40;;;;;;;;;26524:19;:43;;;;;;:99;;-1:-1:-1;;26524:99:0;26583:40;;;;26524:99;;;;;;;;26383:248::o;30467:193::-;30535:5;;30550:11;;30563:28;;30535:57;;;-1:-1:-1;;;30535:57:0;;-1:-1:-1;;;;;30550:11:0;;;30535:57;;;;;;;;;;;;:5;;;;;:14;;:57;;;;;;;;;;;;;;:5;;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;30535:57:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30535:57:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30535:57:0;30513:139;;;;;-1:-1:-1;;;30513:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30467:193::o;30668:476::-;30722:39;;;;30718:419;;;30861:36;;30801:37;;30778:20;;30801:124;;30921:3;;30801:97;;:37;:97;:59;:97;:::i;:124::-;30996:37;;30778:147;;-1:-1:-1;30940:36:0;;30996:55;;30778:147;30996:55;:41;:55;:::i;:::-;30940:111;;31066:59;31096:28;31066:29;:59::i;31790:334::-;31871:30;;31844:62;;31904:1;31871:34;31844:26;:62::i;:::-;31917:37;:35;:37::i;:::-;32025:18;:16;:18::i;:::-;31994:28;:49;;;32054:31;:62;31790:334::o;27166:276::-;27221:7;27241:29;27273:100;27306:56;27323:14;:38;;;27314:3;27306:16;;:56;;;;:::i;:::-;27273:14;;;:100;:18;:100;:::i;:::-;27241:132;;27393:41;27419:14;;27393:21;:25;;:41;;;;:::i;:::-;27386:48;;;27166:276;:::o;2112:213:6:-;-1:-1:-1;;;;;2186:22:6;;2178:57;;;;;-1:-1:-1;;;2178:57:6;;;;;;;;;;;;-1:-1:-1;;;2178:57:6;;;;;;;;;;;;;;;2272:6;;;2251:38;;-1:-1:-1;;;;;2251:38:6;;;;2272:6;;;2251:38;;;2300:6;:17;;-1:-1:-1;;;;;;2300:17:6;-1:-1:-1;;;;;2300:17:6;;;;;;;;;;2112:213::o;831:334:7:-;889:7;988:1;984;:5;976:45;;;;;-1:-1:-1;;;976:45:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:9;1048:1;1044;:5;;;;;;;831:334;-1:-1:-1;;;;831:334:7:o;24611:647:0:-;24747:25;24775:34;24803:5;24775:27;:34::i;:::-;24747:62;;24820:22;24845:42;24869:17;24845:23;:42::i;:::-;24820:67;-1:-1:-1;24898:15:0;24916:37;:17;24820:67;24916:37;:21;:37;:::i;:::-;24898:55;;25011:7;24988:19;:30;;24966:126;;;;-1:-1:-1;;;24966:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25150:30;;25127:53;;;25105:145;;;;-1:-1:-1;;;25105:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29171:648;29307:39;;29278:7;;29307:39;;29303:114;;;29370:35;29394:10;29370:23;:35::i;:::-;29363:42;;;;29303:114;29457:37;;29527:31;;29710:101;29457:37;29710:64;29739:34;29457:37;29527:31;29739:34;:21;:34;:::i;:::-;29710:10;;:64;:28;:64;:::i;:101::-;29703:108;29171:648;-1:-1:-1;;;;29171:648:0:o;29827:482::-;29891:13;29907:37;29938:5;29907:30;:37::i;:::-;-1:-1:-1;;;;;29962:40:0;;:33;:40;;;:19;:40;;;;;;29891:53;;-1:-1:-1;29962:40:0;;29957:239;;-1:-1:-1;;;;;30076:39:0;;;;;;:32;:39;;;;;;:50;;30120:5;30076:50;:43;:50;:::i;:::-;-1:-1:-1;;;;;30019:37:0;;;;;;:30;:37;;;;;;;;:107;;;;30141:32;:39;;;;;:43;29957:239;-1:-1:-1;;;;;;30264:37:0;:30;:37;;;:16;:37;;;;;;;;;30208:19;:40;;;;;;:93;;-1:-1:-1;;30208:93:0;30264:37;;;;30208:93;;;;;;;;29827:482::o;31152:306::-;31310:31;;31279:28;;31310:80;;31360:29;31310:80;:49;:80;:::i;:::-;31414:10;;31279:111;;-1:-1:-1;31414:36:0;;31279:111;31414:36;:14;:36;:::i;31466:316::-;31564:117;;;;;;;;;;;-1:-1:-1;31564:117:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31542:139;;;;;;;-1:-1:-1;;31542:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31713:61;;;;;31744:16;;;;;;;;;;31713:61;;;;;;;;;;31694:80;;31713:61;;31694:16;;:80;;;;;:::i;:::-;;;;;;;;;;;;;31466:316;:::o;27450:256::-;27521:21;27545:23;:21;:23::i;:::-;27521:47;;27616:13;27603:10;;:26;27581:117;;;;-1:-1:-1;;;27581:117:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30317:142;30367:7;30394:57;30447:3;30394:48;30413:14;:28;;;30394:14;;:18;;:48;;;;:::i;:57::-;30387:64;;30317:142;:::o;28960:203::-;29062:7;29094:61;29151:3;29094:52;29109:14;:36;;;29094:10;:14;;:52;;;;:::i;97:2631:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;97:2631:11;-1:-1:-1;;;;;97:2631:11;;;;;;;;;;;-1:-1:-1;97:2631:11;;;;;;;-1:-1:-1;97:2631:11;;;-1:-1:-1;97:2631:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;97:2631:11;;;;;;",
  "source": "pragma solidity 0.5.10;\r\n\r\nimport \"./JuriNetworkProxy.sol\";\r\nimport \"../JuriStakingPool.sol\";\r\n\r\ncontract JuriStakingPoolWithOracle is JuriStakingPool {\r\n    JuriNetworkProxy public proxy;\r\n\r\n    constructor(\r\n        JuriNetworkProxy _proxy,\r\n        IERC20 _token,\r\n        uint256 _startTime,\r\n        uint256 _periodLength,\r\n        uint256 _feePercentage,\r\n        uint256 _compliantGainPercentage,\r\n        uint256 _maxNonCompliantPenaltyPercentage,\r\n        uint256 _minStakePerUser,\r\n        uint256 _maxStakePerUser,\r\n        uint256 _maxTotalStake,\r\n        address _juriAddress\r\n    ) JuriStakingPool(\r\n        _token,\r\n        _startTime,\r\n        _periodLength,\r\n        _feePercentage,\r\n        _compliantGainPercentage,\r\n        _maxNonCompliantPenaltyPercentage,\r\n        _minStakePerUser,\r\n        _maxStakePerUser,\r\n        _maxTotalStake,\r\n        _juriAddress\r\n    ) public {\r\n        proxy = _proxy;\r\n    }\r\n\r\n    /**\r\n     * @dev Add user's compliancy data for current or past periods.\r\n     * @param _updateIterationCount The number defining the max for how much compliance\r\n     * data will be passed in a single function call to prevent out-of-gas errors.\r\n     */\r\n    function checkNewAddedComplianceData(uint256 _updateIterationCount)\r\n        public\r\n        onlyOwner\r\n        atStage(Stages.AWAITING_COMPLIANCE_DATA)\r\n    {\r\n        uint256 nextStakingPeriodEndTime = poolDefinition.startTime.add(\r\n            currentStakingRound.roundIndex.mul(poolDefinition.periodLength)\r\n        );\r\n        require(\r\n            now > nextStakingPeriodEndTime,\r\n            \"Can only add new data after end of periodLength!\"\r\n        );\r\n\r\n        require(\r\n            proxy.roundIndex() >= currentStakingRound.roundIndex,\r\n            \"The results for the round are not available yet!\"\r\n        );\r\n\r\n        for (\r\n            uint256 i = currentStakingRound.addComplianceDataIndex;\r\n            i < users.length && i <\r\n                currentStakingRound.addComplianceDataIndex\r\n                    .add(_updateIterationCount);\r\n            i++\r\n        ) {\r\n            address user = users[i];\r\n            bool wasCompliant = proxy.getUserComplianceData(\r\n                currentStakingRound.roundIndex,\r\n                user\r\n            ) >= 0;\r\n\r\n            complianceDataAtIndex[complianceDataIndex][user] = wasCompliant;\r\n        }\r\n\r\n        currentStakingRound.addComplianceDataIndex\r\n            = currentStakingRound.addComplianceDataIndex\r\n                .add(_updateIterationCount);\r\n\r\n        if (currentStakingRound.addComplianceDataIndex >= users.length) {\r\n            complianceDataIndex++;\r\n            currentStakingRound.stage = Stages.AWAITING_FIRST_UPDATE;\r\n        }\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\mail\\Personal\\Juri\\JuriStakingContract\\contracts\\research\\JuriStakingPoolWithOracle.sol",
  "ast": {
    "absolutePath": "/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/JuriStakingPoolWithOracle.sol",
    "exportedSymbols": {
      "JuriStakingPoolWithOracle": [
        6961
      ]
    },
    "id": 6962,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6796,
        "literals": [
          "solidity",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/JuriNetworkProxy.sol",
        "file": "./JuriNetworkProxy.sol",
        "id": 6797,
        "nodeType": "ImportDirective",
        "scope": 6962,
        "sourceUnit": 6298,
        "src": "27:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/JuriStakingPool.sol",
        "file": "../JuriStakingPool.sol",
        "id": 6798,
        "nodeType": "ImportDirective",
        "scope": 6962,
        "sourceUnit": 2151,
        "src": "61:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6799,
              "name": "JuriStakingPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2150,
              "src": "135:15:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_JuriStakingPool_$2150",
                "typeString": "contract JuriStakingPool"
              }
            },
            "id": 6800,
            "nodeType": "InheritanceSpecifier",
            "src": "135:15:11"
          }
        ],
        "contractDependencies": [
          2150,
          2865
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6961,
        "linearizedBaseContracts": [
          6961,
          2150,
          2865
        ],
        "name": "JuriStakingPoolWithOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6802,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 6961,
            "src": "158:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
              "typeString": "contract JuriNetworkProxy"
            },
            "typeName": {
              "contractScope": null,
              "id": 6801,
              "name": "JuriNetworkProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6297,
              "src": "158:16:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                "typeString": "contract JuriNetworkProxy"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6843,
              "nodeType": "Block",
              "src": "894:33:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6839,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6802,
                      "src": "905:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                        "typeString": "contract JuriNetworkProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6840,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6804,
                      "src": "913:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                        "typeString": "contract JuriNetworkProxy"
                      }
                    },
                    "src": "905:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                      "typeString": "contract JuriNetworkProxy"
                    }
                  },
                  "id": 6842,
                  "nodeType": "ExpressionStatement",
                  "src": "905:14:11"
                }
              ]
            },
            "documentation": null,
            "id": 6844,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6827,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6806,
                    "src": "622:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2685",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6828,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6808,
                    "src": "639:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6829,
                    "name": "_periodLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6810,
                    "src": "660:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6830,
                    "name": "_feePercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6812,
                    "src": "684:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6831,
                    "name": "_compliantGainPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6814,
                    "src": "709:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6832,
                    "name": "_maxNonCompliantPenaltyPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6816,
                    "src": "744:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6833,
                    "name": "_minStakePerUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6818,
                    "src": "788:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6834,
                    "name": "_maxStakePerUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6820,
                    "src": "815:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6835,
                    "name": "_maxTotalStake",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6822,
                    "src": "842:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6836,
                    "name": "_juriAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6824,
                    "src": "867:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6837,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6826,
                  "name": "JuriStakingPool",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2150,
                  "src": "596:15:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_JuriStakingPool_$2150_$",
                    "typeString": "type(contract JuriStakingPool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "596:290:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6804,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "218:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                    "typeString": "contract JuriNetworkProxy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6803,
                    "name": "JuriNetworkProxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6297,
                    "src": "218:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                      "typeString": "contract JuriNetworkProxy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6806,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "252:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2685",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6805,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2685,
                    "src": "252:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2685",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6808,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "276:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6810,
                  "name": "_periodLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "305:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6812,
                  "name": "_feePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "337:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6814,
                  "name": "_compliantGainPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "370:32:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6816,
                  "name": "_maxNonCompliantPenaltyPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "413:41:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6818,
                  "name": "_minStakePerUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "465:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6820,
                  "name": "_maxStakePerUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "500:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6822,
                  "name": "_maxTotalStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "535:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6824,
                  "name": "_juriAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "568:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "207:388:11"
            },
            "returnParameters": {
              "id": 6838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:0:11"
            },
            "scope": 6961,
            "src": "196:731:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6959,
              "nodeType": "Block",
              "src": "1353:1372:11",
              "statements": [
                {
                  "assignments": [
                    6856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6856,
                      "name": "nextStakingPeriodEndTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 6959,
                      "src": "1364:32:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1364:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6867,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6863,
                              "name": "poolDefinition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1477:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolDefinition_$33_storage",
                                "typeString": "struct JuriStakingPool.PoolDefinition storage ref"
                              }
                            },
                            "id": 6864,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "periodLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "1477:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6860,
                              "name": "currentStakingRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1442:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                                "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                              }
                            },
                            "id": 6861,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "roundIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "1442:30:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2901,
                          "src": "1442:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1442:63:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6857,
                          "name": "poolDefinition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1399:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDefinition_$33_storage",
                            "typeString": "struct JuriStakingPool.PoolDefinition storage ref"
                          }
                        },
                        "id": 6858,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "1399:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2976,
                      "src": "1399:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:117:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1364:152:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6869,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8286,
                          "src": "1549:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6870,
                          "name": "nextStakingPeriodEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6856,
                          "src": "1555:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1549:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c7920616464206e6577206461746120616674657220656e64206f6620706572696f644c656e67746821",
                        "id": 6872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1594:50:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9ea965d159a483f27cb406af3fe46b510d871aa1358463d66be62bb8681e7dd",
                          "typeString": "literal_string \"Can only add new data after end of periodLength!\""
                        },
                        "value": "Can only add new data after end of periodLength!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9ea965d159a483f27cb406af3fe46b510d871aa1358463d66be62bb8681e7dd",
                          "typeString": "literal_string \"Can only add new data after end of periodLength!\""
                        }
                      ],
                      "id": 6868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8287,
                        8288
                      ],
                      "referencedDeclaration": 8288,
                      "src": "1527:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1527:128:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6874,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:128:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6876,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6802,
                              "src": "1690:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                                "typeString": "contract JuriNetworkProxy"
                              }
                            },
                            "id": 6877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "roundIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4419,
                            "src": "1690:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 6878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1690:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6879,
                            "name": "currentStakingRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1712:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                              "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                            }
                          },
                          "id": 6880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "roundIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47,
                          "src": "1712:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1690:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520726573756c747320666f722074686520726f756e6420617265206e6f7420617661696c61626c652079657421",
                        "id": 6882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1757:50:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b236a60197e8deab0080f26c9b6eda4bde6af5691d8c320c555de8dad5b3d72",
                          "typeString": "literal_string \"The results for the round are not available yet!\""
                        },
                        "value": "The results for the round are not available yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b236a60197e8deab0080f26c9b6eda4bde6af5691d8c320c555de8dad5b3d72",
                          "typeString": "literal_string \"The results for the round are not available yet!\""
                        }
                      ],
                      "id": 6875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8287,
                        8288
                      ],
                      "referencedDeclaration": 8288,
                      "src": "1668:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:150:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6884,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:150:11"
                },
                {
                  "body": {
                    "id": 6930,
                    "nodeType": "Block",
                    "src": "2081:284:11",
                    "statements": [
                      {
                        "assignments": [
                          6906
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6906,
                            "name": "user",
                            "nodeType": "VariableDeclaration",
                            "scope": 6930,
                            "src": "2096:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6905,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2096:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 6910,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6907,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2111:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 6909,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6908,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6886,
                            "src": "2117:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2111:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2096:23:11"
                      },
                      {
                        "assignments": [
                          6912
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6912,
                            "name": "wasCompliant",
                            "nodeType": "VariableDeclaration",
                            "scope": 6930,
                            "src": "2134:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 6911,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2134:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 6921,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 6920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 6915,
                                  "name": "currentStakingRound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "2200:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                                    "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                                  }
                                },
                                "id": 6916,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "roundIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47,
                                "src": "2200:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 6917,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6906,
                                "src": "2249:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 6913,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6802,
                                "src": "2154:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                                  "typeString": "contract JuriNetworkProxy"
                                }
                              },
                              "id": 6914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getUserComplianceData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5481,
                              "src": "2154:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_int256_$",
                                "typeString": "function (uint256,address) view external returns (int256)"
                              }
                            },
                            "id": 6918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2154:114:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 6919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2272:1:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2154:119:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2134:139:11"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 6922,
                                "name": "complianceDataAtIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "2290:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => bool))"
                                }
                              },
                              "id": 6925,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 6923,
                                "name": "complianceDataIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "2312:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2290:42:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 6926,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 6924,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6906,
                              "src": "2333:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2290:48:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 6927,
                            "name": "wasCompliant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6912,
                            "src": "2341:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2290:63:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6929,
                        "nodeType": "ExpressionStatement",
                        "src": "2290:63:11"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6890,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "1919:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6891,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1923:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6892,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1923:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1919:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6894,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "1939:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6898,
                            "name": "_updateIterationCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6846,
                            "src": "2029:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6895,
                              "name": "currentStakingRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1960:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                                "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                              }
                            },
                            "id": 6896,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addComplianceDataIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51,
                            "src": "1960:42:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2976,
                          "src": "1960:68:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1960:91:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1939:112:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1919:132:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6931,
                  "initializationExpression": {
                    "assignments": [
                      6886
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6886,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 6931,
                        "src": "1850:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1850:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6889,
                    "initialValue": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6887,
                        "name": "currentStakingRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1862:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                          "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                        }
                      },
                      "id": 6888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addComplianceDataIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "1862:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1850:54:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2066:3:11",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6902,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "2066:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6904,
                    "nodeType": "ExpressionStatement",
                    "src": "2066:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "1831:534:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6932,
                        "name": "currentStakingRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2377:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                          "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                        }
                      },
                      "id": 6934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "addComplianceDataIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "2377:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6938,
                          "name": "_updateIterationCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6846,
                          "src": "2500:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6935,
                            "name": "currentStakingRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "2435:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                              "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                            }
                          },
                          "id": 6936,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addComplianceDataIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51,
                          "src": "2435:42:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2976,
                        "src": "2435:64:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2435:87:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2377:145:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6941,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:145:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6942,
                        "name": "currentStakingRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2539:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                          "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                        }
                      },
                      "id": 6943,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addComplianceDataIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "2539:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6944,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2585:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6945,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2585:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2539:58:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6958,
                  "nodeType": "IfStatement",
                  "src": "2535:183:11",
                  "trueBody": {
                    "id": 6957,
                    "nodeType": "Block",
                    "src": "2599:119:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2614:21:11",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 6947,
                            "name": "complianceDataIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2614:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6949,
                        "nodeType": "ExpressionStatement",
                        "src": "2614:21:11"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6950,
                              "name": "currentStakingRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "2650:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                                "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                              }
                            },
                            "id": 6952,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49,
                            "src": "2650:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stages_$14",
                              "typeString": "enum JuriStakingPool.Stages"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6953,
                              "name": "Stages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "2678:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stages_$14_$",
                                "typeString": "type(enum JuriStakingPool.Stages)"
                              }
                            },
                            "id": 6954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "AWAITING_FIRST_UPDATE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2678:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stages_$14",
                              "typeString": "enum JuriStakingPool.Stages"
                            }
                          },
                          "src": "2650:56:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$14",
                            "typeString": "enum JuriStakingPool.Stages"
                          }
                        },
                        "id": 6956,
                        "nodeType": "ExpressionStatement",
                        "src": "2650:56:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Add user's compliancy data for current or past periods.\r\n@param _updateIterationCount The number defining the max for how much compliance\r\ndata will be passed in a single function call to prevent out-of-gas errors.\r",
            "id": 6960,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6849,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6848,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2798,
                  "src": "1288:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1288:9:11"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 6851,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1315:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$14_$",
                        "typeString": "type(enum JuriStakingPool.Stages)"
                      }
                    },
                    "id": 6852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "AWAITING_COMPLIANCE_DATA",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1315:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$14",
                      "typeString": "enum JuriStakingPool.Stages"
                    }
                  }
                ],
                "id": 6853,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6850,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 129,
                  "src": "1307:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$14_$",
                    "typeString": "modifier (enum JuriStakingPool.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1307:40:11"
              }
            ],
            "name": "checkNewAddedComplianceData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6846,
                  "name": "_updateIterationCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6960,
                  "src": "1232:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1231:31:11"
            },
            "returnParameters": {
              "id": 6854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1353:0:11"
            },
            "scope": 6961,
            "src": "1195:1530:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6962,
        "src": "97:2631:11"
      }
    ],
    "src": "0:2728:11"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/JuriStakingPoolWithOracle.sol",
    "exportedSymbols": {
      "JuriStakingPoolWithOracle": [
        6961
      ]
    },
    "id": 6962,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6796,
        "literals": [
          "solidity",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/research/JuriNetworkProxy.sol",
        "file": "./JuriNetworkProxy.sol",
        "id": 6797,
        "nodeType": "ImportDirective",
        "scope": 6962,
        "sourceUnit": 6298,
        "src": "27:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mail/Personal/Juri/JuriStakingContract/contracts/JuriStakingPool.sol",
        "file": "../JuriStakingPool.sol",
        "id": 6798,
        "nodeType": "ImportDirective",
        "scope": 6962,
        "sourceUnit": 2151,
        "src": "61:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6799,
              "name": "JuriStakingPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2150,
              "src": "135:15:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_JuriStakingPool_$2150",
                "typeString": "contract JuriStakingPool"
              }
            },
            "id": 6800,
            "nodeType": "InheritanceSpecifier",
            "src": "135:15:11"
          }
        ],
        "contractDependencies": [
          2150,
          2865
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6961,
        "linearizedBaseContracts": [
          6961,
          2150,
          2865
        ],
        "name": "JuriStakingPoolWithOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6802,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 6961,
            "src": "158:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
              "typeString": "contract JuriNetworkProxy"
            },
            "typeName": {
              "contractScope": null,
              "id": 6801,
              "name": "JuriNetworkProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6297,
              "src": "158:16:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                "typeString": "contract JuriNetworkProxy"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6843,
              "nodeType": "Block",
              "src": "894:33:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6839,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6802,
                      "src": "905:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                        "typeString": "contract JuriNetworkProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6840,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6804,
                      "src": "913:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                        "typeString": "contract JuriNetworkProxy"
                      }
                    },
                    "src": "905:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                      "typeString": "contract JuriNetworkProxy"
                    }
                  },
                  "id": 6842,
                  "nodeType": "ExpressionStatement",
                  "src": "905:14:11"
                }
              ]
            },
            "documentation": null,
            "id": 6844,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6827,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6806,
                    "src": "622:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2685",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6828,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6808,
                    "src": "639:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6829,
                    "name": "_periodLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6810,
                    "src": "660:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6830,
                    "name": "_feePercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6812,
                    "src": "684:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6831,
                    "name": "_compliantGainPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6814,
                    "src": "709:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6832,
                    "name": "_maxNonCompliantPenaltyPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6816,
                    "src": "744:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6833,
                    "name": "_minStakePerUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6818,
                    "src": "788:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6834,
                    "name": "_maxStakePerUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6820,
                    "src": "815:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6835,
                    "name": "_maxTotalStake",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6822,
                    "src": "842:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6836,
                    "name": "_juriAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6824,
                    "src": "867:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6837,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6826,
                  "name": "JuriStakingPool",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2150,
                  "src": "596:15:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_JuriStakingPool_$2150_$",
                    "typeString": "type(contract JuriStakingPool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "596:290:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6804,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "218:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                    "typeString": "contract JuriNetworkProxy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6803,
                    "name": "JuriNetworkProxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6297,
                    "src": "218:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                      "typeString": "contract JuriNetworkProxy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6806,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "252:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2685",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6805,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2685,
                    "src": "252:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2685",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6808,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "276:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6810,
                  "name": "_periodLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "305:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6812,
                  "name": "_feePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "337:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6814,
                  "name": "_compliantGainPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "370:32:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6816,
                  "name": "_maxNonCompliantPenaltyPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "413:41:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6818,
                  "name": "_minStakePerUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "465:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6820,
                  "name": "_maxStakePerUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "500:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6822,
                  "name": "_maxTotalStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "535:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6824,
                  "name": "_juriAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "568:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "207:388:11"
            },
            "returnParameters": {
              "id": 6838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:0:11"
            },
            "scope": 6961,
            "src": "196:731:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6959,
              "nodeType": "Block",
              "src": "1353:1372:11",
              "statements": [
                {
                  "assignments": [
                    6856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6856,
                      "name": "nextStakingPeriodEndTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 6959,
                      "src": "1364:32:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1364:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6867,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6863,
                              "name": "poolDefinition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1477:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolDefinition_$33_storage",
                                "typeString": "struct JuriStakingPool.PoolDefinition storage ref"
                              }
                            },
                            "id": 6864,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "periodLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "1477:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6860,
                              "name": "currentStakingRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1442:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                                "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                              }
                            },
                            "id": 6861,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "roundIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "1442:30:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2901,
                          "src": "1442:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1442:63:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6857,
                          "name": "poolDefinition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1399:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDefinition_$33_storage",
                            "typeString": "struct JuriStakingPool.PoolDefinition storage ref"
                          }
                        },
                        "id": 6858,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "1399:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2976,
                      "src": "1399:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:117:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1364:152:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6869,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8286,
                          "src": "1549:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6870,
                          "name": "nextStakingPeriodEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6856,
                          "src": "1555:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1549:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c7920616464206e6577206461746120616674657220656e64206f6620706572696f644c656e67746821",
                        "id": 6872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1594:50:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9ea965d159a483f27cb406af3fe46b510d871aa1358463d66be62bb8681e7dd",
                          "typeString": "literal_string \"Can only add new data after end of periodLength!\""
                        },
                        "value": "Can only add new data after end of periodLength!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9ea965d159a483f27cb406af3fe46b510d871aa1358463d66be62bb8681e7dd",
                          "typeString": "literal_string \"Can only add new data after end of periodLength!\""
                        }
                      ],
                      "id": 6868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8287,
                        8288
                      ],
                      "referencedDeclaration": 8288,
                      "src": "1527:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1527:128:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6874,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:128:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6876,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6802,
                              "src": "1690:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                                "typeString": "contract JuriNetworkProxy"
                              }
                            },
                            "id": 6877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "roundIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4419,
                            "src": "1690:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 6878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1690:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6879,
                            "name": "currentStakingRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1712:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                              "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                            }
                          },
                          "id": 6880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "roundIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47,
                          "src": "1712:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1690:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520726573756c747320666f722074686520726f756e6420617265206e6f7420617661696c61626c652079657421",
                        "id": 6882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1757:50:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b236a60197e8deab0080f26c9b6eda4bde6af5691d8c320c555de8dad5b3d72",
                          "typeString": "literal_string \"The results for the round are not available yet!\""
                        },
                        "value": "The results for the round are not available yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b236a60197e8deab0080f26c9b6eda4bde6af5691d8c320c555de8dad5b3d72",
                          "typeString": "literal_string \"The results for the round are not available yet!\""
                        }
                      ],
                      "id": 6875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8287,
                        8288
                      ],
                      "referencedDeclaration": 8288,
                      "src": "1668:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:150:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6884,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:150:11"
                },
                {
                  "body": {
                    "id": 6930,
                    "nodeType": "Block",
                    "src": "2081:284:11",
                    "statements": [
                      {
                        "assignments": [
                          6906
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6906,
                            "name": "user",
                            "nodeType": "VariableDeclaration",
                            "scope": 6930,
                            "src": "2096:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6905,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2096:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 6910,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6907,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2111:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 6909,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6908,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6886,
                            "src": "2117:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2111:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2096:23:11"
                      },
                      {
                        "assignments": [
                          6912
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6912,
                            "name": "wasCompliant",
                            "nodeType": "VariableDeclaration",
                            "scope": 6930,
                            "src": "2134:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 6911,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2134:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 6921,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 6920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 6915,
                                  "name": "currentStakingRound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "2200:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                                    "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                                  }
                                },
                                "id": 6916,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "roundIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47,
                                "src": "2200:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 6917,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6906,
                                "src": "2249:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 6913,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6802,
                                "src": "2154:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_JuriNetworkProxy_$6297",
                                  "typeString": "contract JuriNetworkProxy"
                                }
                              },
                              "id": 6914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getUserComplianceData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5481,
                              "src": "2154:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_int256_$",
                                "typeString": "function (uint256,address) view external returns (int256)"
                              }
                            },
                            "id": 6918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2154:114:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 6919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2272:1:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2154:119:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2134:139:11"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 6922,
                                "name": "complianceDataAtIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "2290:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => bool))"
                                }
                              },
                              "id": 6925,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 6923,
                                "name": "complianceDataIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "2312:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2290:42:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 6926,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 6924,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6906,
                              "src": "2333:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2290:48:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 6927,
                            "name": "wasCompliant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6912,
                            "src": "2341:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2290:63:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6929,
                        "nodeType": "ExpressionStatement",
                        "src": "2290:63:11"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6890,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "1919:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6891,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1923:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6892,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1923:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1919:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6894,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "1939:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6898,
                            "name": "_updateIterationCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6846,
                            "src": "2029:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6895,
                              "name": "currentStakingRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1960:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                                "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                              }
                            },
                            "id": 6896,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addComplianceDataIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51,
                            "src": "1960:42:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2976,
                          "src": "1960:68:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1960:91:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1939:112:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1919:132:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6931,
                  "initializationExpression": {
                    "assignments": [
                      6886
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6886,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 6931,
                        "src": "1850:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1850:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6889,
                    "initialValue": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6887,
                        "name": "currentStakingRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1862:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                          "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                        }
                      },
                      "id": 6888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addComplianceDataIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "1862:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1850:54:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2066:3:11",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6902,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "2066:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6904,
                    "nodeType": "ExpressionStatement",
                    "src": "2066:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "1831:534:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6932,
                        "name": "currentStakingRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2377:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                          "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                        }
                      },
                      "id": 6934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "addComplianceDataIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "2377:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6938,
                          "name": "_updateIterationCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6846,
                          "src": "2500:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6935,
                            "name": "currentStakingRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "2435:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                              "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                            }
                          },
                          "id": 6936,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addComplianceDataIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51,
                          "src": "2435:42:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2976,
                        "src": "2435:64:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2435:87:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2377:145:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6941,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:145:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6942,
                        "name": "currentStakingRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2539:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                          "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                        }
                      },
                      "id": 6943,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addComplianceDataIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "2539:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6944,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2585:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6945,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2585:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2539:58:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6958,
                  "nodeType": "IfStatement",
                  "src": "2535:183:11",
                  "trueBody": {
                    "id": 6957,
                    "nodeType": "Block",
                    "src": "2599:119:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2614:21:11",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 6947,
                            "name": "complianceDataIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2614:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6949,
                        "nodeType": "ExpressionStatement",
                        "src": "2614:21:11"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6950,
                              "name": "currentStakingRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "2650:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CurrentStakingRound_$66_storage",
                                "typeString": "struct JuriStakingPool.CurrentStakingRound storage ref"
                              }
                            },
                            "id": 6952,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49,
                            "src": "2650:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stages_$14",
                              "typeString": "enum JuriStakingPool.Stages"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6953,
                              "name": "Stages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "2678:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stages_$14_$",
                                "typeString": "type(enum JuriStakingPool.Stages)"
                              }
                            },
                            "id": 6954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "AWAITING_FIRST_UPDATE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2678:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stages_$14",
                              "typeString": "enum JuriStakingPool.Stages"
                            }
                          },
                          "src": "2650:56:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$14",
                            "typeString": "enum JuriStakingPool.Stages"
                          }
                        },
                        "id": 6956,
                        "nodeType": "ExpressionStatement",
                        "src": "2650:56:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Add user's compliancy data for current or past periods.\r\n@param _updateIterationCount The number defining the max for how much compliance\r\ndata will be passed in a single function call to prevent out-of-gas errors.\r",
            "id": 6960,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6849,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6848,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2798,
                  "src": "1288:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1288:9:11"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 6851,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1315:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$14_$",
                        "typeString": "type(enum JuriStakingPool.Stages)"
                      }
                    },
                    "id": 6852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "AWAITING_COMPLIANCE_DATA",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1315:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$14",
                      "typeString": "enum JuriStakingPool.Stages"
                    }
                  }
                ],
                "id": 6853,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6850,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 129,
                  "src": "1307:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$14_$",
                    "typeString": "modifier (enum JuriStakingPool.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1307:40:11"
              }
            ],
            "name": "checkNewAddedComplianceData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6846,
                  "name": "_updateIterationCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6960,
                  "src": "1232:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1231:31:11"
            },
            "returnParameters": {
              "id": 6854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1353:0:11"
            },
            "scope": 6961,
            "src": "1195:1530:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6962,
        "src": "97:2631:11"
      }
    ],
    "src": "0:2728:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-26T23:35:56.755Z",
  "devdoc": {
    "methods": {
      "addMoreStakeForNextPeriod(uint256)": {
        "details": "Add more stake for user once next staking period starts.\r",
        "params": {
          "_amount": "The amount to be added as stake.\r"
        }
      },
      "addOwnerFunds(uint256)": {
        "details": "Add owner funds to pool.\r"
      },
      "addUserInNextPeriod(uint256)": {
        "details": "Add user to pool once next staking period starts.\r",
        "params": {
          "_amount": "The amount to be added as stake for the user.\r"
        }
      },
      "addWasCompliantDataForUsers(uint256,bool[])": {
        "details": "Add user's compliancy data for current or past periods.\r",
        "params": {
          "_updateIterationCount": "The number defining the max for how much compliance\r data will be passed in a single function call to prevent out-of-gas errors.\r",
          "_wasCompliant": "The boolean array to indicate compliancy.\r"
        }
      },
      "checkNewAddedComplianceData(uint256)": {
        "details": "Add user's compliancy data for current or past periods.\r",
        "params": {
          "_updateIterationCount": "The number defining the max for how much compliance\r data will be passed in a single function call to prevent out-of-gas errors.\r"
        }
      },
      "firstUpdateStakeForNextXAmountOfUsers(uint256)": {
        "details": "First part for updating stakes of users for next X users.\r",
        "params": {
          "_updateIterationCount": "The number defining how many users should\r be updated in a single function call to prevent out-of-gas errors.\r"
        }
      },
      "getAdditionalStakeForUserInNextPeriod(address)": {
        "details": "Get added stake for user.\r",
        "return": "The amount of stake added in the next round for user.\r"
      },
      "getIsCurrentRoundStaking()": {
        "details": "Read if calling user is staking in the current round.\r",
        "return": "The boolean indicator if user is staking in the current round.\r"
      },
      "getIsLeavingNextPeriodForUser(address)": {
        "details": "Read if user will be removed in the next round.\r",
        "params": {
          "_user": "The user to be checked.\r"
        },
        "return": "The boolean indicator showing if user is leaving next round.\r"
      },
      "getIsNextRoundStaking()": {
        "details": "Read if calling user is staking in the next round.\r",
        "return": "The boolean indicator if user will be staking next round.\r"
      },
      "getPoolUserCount()": {
        "details": "Get the total pool user count.\r"
      },
      "getStakeForUserAtRoundStart(address)": {
        "details": "Get stake for user that will be used in current staking round.\r",
        "return": "The amount of stake used in the current round for user.\r"
      },
      "getStakeForUserInCurrentPeriod(address)": {
        "details": "Get current stake for user.\r",
        "return": "The amount of stake in the current round for user.\r"
      },
      "getUserToBeAddedNextPeriod(uint256)": {
        "details": "Read users to be added in the next round.\r",
        "params": {
          "_index": "The index in the array of pending user additions.\r"
        },
        "return": "The user to be added.\r"
      },
      "getUsers()": {
        "details": "Read users in pool.\r",
        "return": "The users in the pool.\r"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "optInForStakingForNextPeriod()": {
        "details": "Opt in for staking for user once next staking period starts.\r"
      },
      "optOutOfStakingForNextPeriod()": {
        "details": "Opt out of staking for user once next staking period starts.\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "removeUserInNextPeriod()": {
        "details": "Remove user from pool once next staking period starts.\r"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.\r It will not be possible to call the functions with the `onlyOwner`\r modifier anymore.\r"
      },
      "secondUpdateStakeForNextXAmountOfUsers(uint256)": {
        "details": "Second part for updating stakes of users for next X users.\r",
        "params": {
          "_updateIterationCount": "The number defining how many users should\r be updated in a single function call to prevent out-of-gas errors.\r"
        }
      },
      "setJuriAddress(address)": {
        "details": "Set new Juri address.\r",
        "params": {
          "_newJuriAddress": "The new Juri address to be stored.\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      },
      "withdraw(uint256)": {
        "details": "Withdraw user stake funds from pool. Use funds added for next period\r first. Keep enough funds to pay non-compliant penalty if required.\r"
      },
      "withdrawOwnerFunds(uint256)": {
        "details": "Withdraw owner funds from pool.\r",
        "params": {
          "_amount": "The amount to withdraw.\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner,\r thereby removing any functionality that is only available to the owner.\r"
      }
    }
  }
}